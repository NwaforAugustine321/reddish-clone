{"ast":null,"code":"import React from'react';import{useDispatch,useSelector}from'react-redux';import{clearNotif}from'../reducers/notificationReducer';import{Snackbar}from'@material-ui/core';import Alert from'@material-ui/lab/Alert';import{jsx as _jsx}from\"react/jsx-runtime\";var ToastNotif=function ToastNotif(){var dispatch=useDispatch();var notification=useSelector(function(state){return state.notification;});if(!notification){return null;}var message=notification.message,severity=notification.severity;var handleNotifClose=function handleNotifClose(){dispatch(clearNotif());};return/*#__PURE__*/_jsx(Snackbar,{open:!!notification,onClose:handleNotifClose,anchorOrigin:{vertical:'bottom',horizontal:'center'},children:/*#__PURE__*/_jsx(Alert,{onClose:handleNotifClose,severity:severity,children:message})});};export default ToastNotif;","map":{"version":3,"sources":["/home/thaddydore/Desktop/reddish-clone/client/src/components/ToastNotif.js"],"names":["React","useDispatch","useSelector","clearNotif","Snackbar","Alert","ToastNotif","dispatch","notification","state","message","severity","handleNotifClose","vertical","horizontal"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,UAAT,KAA2B,iCAA3B,CAEA,OAASC,QAAT,KAAyB,mBAAzB,CACA,MAAOC,CAAAA,KAAP,KAAkB,wBAAlB,C,2CAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACvB,GAAMC,CAAAA,QAAQ,CAAGN,WAAW,EAA5B,CACA,GAAMO,CAAAA,YAAY,CAAGN,WAAW,CAAC,SAACO,KAAD,QAAWA,CAAAA,KAAK,CAACD,YAAjB,EAAD,CAAhC,CAEA,GAAI,CAACA,YAAL,CAAmB,CACjB,MAAO,KAAP,CACD,CAED,GAAQE,CAAAA,OAAR,CAA8BF,YAA9B,CAAQE,OAAR,CAAiBC,QAAjB,CAA8BH,YAA9B,CAAiBG,QAAjB,CAEA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,EAAM,CAC7BL,QAAQ,CAACJ,UAAU,EAAX,CAAR,CACD,CAFD,CAIA,mBACE,KAAC,QAAD,EACE,IAAI,CAAE,CAAC,CAACK,YADV,CAEE,OAAO,CAAEI,gBAFX,CAGE,YAAY,CAAE,CAAEC,QAAQ,CAAE,QAAZ,CAAsBC,UAAU,CAAE,QAAlC,CAHhB,uBAKE,KAAC,KAAD,EAAO,OAAO,CAAEF,gBAAhB,CAAkC,QAAQ,CAAED,QAA5C,UACGD,OADH,EALF,EADF,CAWD,CAzBD,CA2BA,cAAeJ,CAAAA,UAAf","sourcesContent":["import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { clearNotif } from '../reducers/notificationReducer';\n\nimport { Snackbar } from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\n\nconst ToastNotif = () => {\n  const dispatch = useDispatch();\n  const notification = useSelector((state) => state.notification);\n\n  if (!notification) {\n    return null;\n  }\n\n  const { message, severity } = notification;\n\n  const handleNotifClose = () => {\n    dispatch(clearNotif());\n  };\n\n  return (\n    <Snackbar\n      open={!!notification}\n      onClose={handleNotifClose}\n      anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n    >\n      <Alert onClose={handleNotifClose} severity={severity}>\n        {message}\n      </Alert>\n    </Snackbar>\n  );\n};\n\nexport default ToastNotif;\n"]},"metadata":{},"sourceType":"module"}