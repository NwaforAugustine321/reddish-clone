{"ast":null,"code":"import _regeneratorRuntime from\"/home/thaddydore/Desktop/reddish-clone/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/thaddydore/Desktop/reddish-clone/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/thaddydore/Desktop/reddish-clone/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{useDispatch}from'react-redux';import{useHistory,useLocation}from'react-router-dom';import DeleteDialog from'./DeleteDialog';import PostFormModal from'./PostFormModal';import{removePost}from'../reducers/postReducer';import{notify}from'../reducers/notificationReducer';import getErrorMsg from'../utils/getErrorMsg';import{IconButton,Menu}from'@material-ui/core';import MoreHorizIcon from'@material-ui/icons/MoreHoriz';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var EditDeleteMenu=function EditDeleteMenu(_ref){var id=_ref.id,title=_ref.title,postType=_ref.postType,subreddit=_ref.subreddit,buttonType=_ref.buttonType,textSubmission=_ref.textSubmission,linkSubmission=_ref.linkSubmission;var dispatch=useDispatch();var history=useHistory();var location=useLocation();var _useState=useState(null),_useState2=_slicedToArray(_useState,2),anchorEl=_useState2[0],setAnchorEl=_useState2[1];var handleClick=function handleClick(event){setAnchorEl(event.currentTarget);};var handleClose=function handleClose(){setAnchorEl(null);};var handleDeletePost=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;handleClose();_context.next=4;return dispatch(removePost(id));case 4:if(location.pathname!=='/'){history.push('/');}dispatch(notify(\"Post deleted!\",'success'));_context.next=11;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](0);dispatch(notify(getErrorMsg(_context.t0),'error'));case 11:case\"end\":return _context.stop();}}},_callee,null,[[0,8]]);}));return function handleDeletePost(){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/_jsx(\"div\",{children:buttonType==='buttonGroup'?/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex'},children:[/*#__PURE__*/_jsx(PostFormModal,{actionType:\"edit\",handleMenuClose:handleClose,postToEditType:postType,postToEditTitle:title,postToEditSub:subreddit,postToEditId:id,textSubmission:textSubmission,linkSubmission:linkSubmission}),/*#__PURE__*/_jsx(DeleteDialog,{title:title,handleDelete:handleDeletePost,handleMenuClose:handleClose})]}):/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(IconButton,{onClick:handleClick,children:/*#__PURE__*/_jsx(MoreHorizIcon,{})}),/*#__PURE__*/_jsxs(Menu,{anchorEl:anchorEl,keepMounted:true,open:Boolean(anchorEl),onClose:handleClose,children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(PostFormModal,{actionType:\"edit\",handleMenuClose:handleClose,postToEditType:postType,postToEditTitle:title,postToEditSub:subreddit,postToEditId:id,textSubmission:textSubmission,linkSubmission:linkSubmission})}),/*#__PURE__*/_jsx(DeleteDialog,{title:title,handleDelete:handleDeletePost,handleMenuClose:handleClose})]})]})});};export default EditDeleteMenu;","map":{"version":3,"sources":["/home/thaddydore/Desktop/reddish-clone/client/src/components/EditDeleteMenu.js"],"names":["React","useState","useDispatch","useHistory","useLocation","DeleteDialog","PostFormModal","removePost","notify","getErrorMsg","IconButton","Menu","MoreHorizIcon","EditDeleteMenu","id","title","postType","subreddit","buttonType","textSubmission","linkSubmission","dispatch","history","location","anchorEl","setAnchorEl","handleClick","event","currentTarget","handleClose","handleDeletePost","pathname","push","display","Boolean"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport DeleteDialog from './DeleteDialog';\nimport PostFormModal from './PostFormModal';\nimport { removePost } from '../reducers/postReducer';\nimport { notify } from '../reducers/notificationReducer';\nimport getErrorMsg from '../utils/getErrorMsg';\n\nimport { IconButton, Menu } from '@material-ui/core';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\n\nconst EditDeleteMenu = ({\n  id,\n  title,\n  postType,\n  subreddit,\n  buttonType,\n  textSubmission,\n  linkSubmission,\n}) => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const location = useLocation();\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleDeletePost = async () => {\n    try {\n      handleClose();\n      await dispatch(removePost(id));\n      if (location.pathname !== '/') {\n        history.push('/');\n      }\n      dispatch(notify(`Post deleted!`, 'success'));\n    } catch (err) {\n      dispatch(notify(getErrorMsg(err), 'error'));\n    }\n  };\n\n  return (\n    <div>\n      {buttonType === 'buttonGroup' ? (\n        <div style={{ display: 'flex' }}>\n          <PostFormModal\n            actionType=\"edit\"\n            handleMenuClose={handleClose}\n            postToEditType={postType}\n            postToEditTitle={title}\n            postToEditSub={subreddit}\n            postToEditId={id}\n            textSubmission={textSubmission}\n            linkSubmission={linkSubmission}\n          />\n          <DeleteDialog\n            title={title}\n            handleDelete={handleDeletePost}\n            handleMenuClose={handleClose}\n          />\n        </div>\n      ) : (\n        <div>\n          <IconButton onClick={handleClick}>\n            <MoreHorizIcon />\n          </IconButton>\n          <Menu\n            anchorEl={anchorEl}\n            keepMounted\n            open={Boolean(anchorEl)}\n            onClose={handleClose}\n          >\n            <div>\n              <PostFormModal\n                actionType=\"edit\"\n                handleMenuClose={handleClose}\n                postToEditType={postType}\n                postToEditTitle={title}\n                postToEditSub={subreddit}\n                postToEditId={id}\n                textSubmission={textSubmission}\n                linkSubmission={linkSubmission}\n              />\n            </div>\n            <DeleteDialog\n              title={title}\n              handleDelete={handleDeletePost}\n              handleMenuClose={handleClose}\n            />\n          </Menu>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default EditDeleteMenu;\n"]},"metadata":{},"sourceType":"module"}