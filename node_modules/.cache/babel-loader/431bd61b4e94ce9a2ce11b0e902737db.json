{"ast":null,"code":"import _regeneratorRuntime from\"/home/thaddydore/Desktop/reddish-clone/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/thaddydore/Desktop/reddish-clone/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _toConsumableArray from\"/home/thaddydore/Desktop/reddish-clone/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/home/thaddydore/Desktop/reddish-clone/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import postService from'../services/posts';var postReducer=function postReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case'SET_POSTS':return action.payload;case'LOAD_MORE_POSTS':return _objectSpread(_objectSpread({},action.payload),{},{results:[].concat(_toConsumableArray(state.results),_toConsumableArray(action.payload.results))});case'TOGGLE_VOTE':return _objectSpread(_objectSpread({},state),{},{results:state.results.map(function(r){return r.id!==action.payload.id?r:_objectSpread(_objectSpread({},r),action.payload.data);})});case'DELETE_POST':return _objectSpread(_objectSpread({},state),{},{results:state.results.filter(function(r){return r.id!==action.payload;})});default:return state;}};export var fetchPosts=function fetchPosts(sortBy){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var posts;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(sortBy!=='subscribed')){_context.next=6;break;}_context.next=3;return postService.getPosts(sortBy,10,1);case 3:posts=_context.sent;_context.next=9;break;case 6:_context.next=8;return postService.getSubPosts(10,1);case 8:posts=_context.sent;case 9:dispatch({type:'SET_POSTS',payload:posts});case 10:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();};export var loadMorePosts=function loadMorePosts(sortBy,page){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var posts;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(!(sortBy!=='subscribed')){_context2.next=6;break;}_context2.next=3;return postService.getPosts(sortBy,10,page);case 3:posts=_context2.sent;_context2.next=9;break;case 6:_context2.next=8;return postService.getSubPosts(10,page);case 8:posts=_context2.sent;case 9:dispatch({type:'LOAD_MORE_POSTS',payload:posts});case 10:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}();};export var toggleUpvote=function toggleUpvote(id,upvotedBy,downvotedBy){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch){var pointsCount;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:pointsCount=upvotedBy.length-downvotedBy.length;if(pointsCount<0){pointsCount=0;}dispatch({type:'TOGGLE_VOTE',payload:{id:id,data:{upvotedBy:upvotedBy,pointsCount:pointsCount,downvotedBy:downvotedBy}}});_context3.next=5;return postService.upvotePost(id);case 5:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x3){return _ref3.apply(this,arguments);};}();};export var toggleDownvote=function toggleDownvote(id,downvotedBy,upvotedBy){return/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch){var pointsCount;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:pointsCount=upvotedBy.length-downvotedBy.length;if(pointsCount<0){pointsCount=0;}dispatch({type:'TOGGLE_VOTE',payload:{id:id,data:{upvotedBy:upvotedBy,pointsCount:pointsCount,downvotedBy:downvotedBy}}});_context4.next=5;return postService.downvotePost(id);case 5:case\"end\":return _context4.stop();}}},_callee4);}));return function(_x4){return _ref4.apply(this,arguments);};}();};export var removePost=function removePost(id){return/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(dispatch){return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.next=2;return postService.deletePost(id);case 2:dispatch({type:'DELETE_POST',payload:id});case 3:case\"end\":return _context5.stop();}}},_callee5);}));return function(_x5){return _ref5.apply(this,arguments);};}();};export default postReducer;","map":{"version":3,"sources":["/home/thaddydore/Desktop/reddish-clone/client/src/reducers/postReducer.js"],"names":["postService","postReducer","state","action","type","payload","results","map","r","id","data","filter","fetchPosts","sortBy","dispatch","getPosts","posts","getSubPosts","loadMorePosts","page","toggleUpvote","upvotedBy","downvotedBy","pointsCount","length","upvotePost","toggleDownvote","downvotePost","removePost","deletePost"],"mappings":"opBAAA,MAAOA,CAAAA,WAAP,KAAwB,mBAAxB,CAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAA0B,IAAzBC,CAAAA,KAAyB,2DAAjB,IAAiB,IAAXC,CAAAA,MAAW,2CAC5C,OAAQA,MAAM,CAACC,IAAf,EACE,IAAK,WAAL,CACE,MAAOD,CAAAA,MAAM,CAACE,OAAd,CACF,IAAK,iBAAL,CACE,sCACKF,MAAM,CAACE,OADZ,MAEEC,OAAO,8BAAMJ,KAAK,CAACI,OAAZ,qBAAwBH,MAAM,CAACE,OAAP,CAAeC,OAAvC,EAFT,GAIF,IAAK,aAAL,CACE,sCACKJ,KADL,MAEEI,OAAO,CAAEJ,KAAK,CAACI,OAAN,CAAcC,GAAd,CAAkB,SAACC,CAAD,QACzBA,CAAAA,CAAC,CAACC,EAAF,GAASN,MAAM,CAACE,OAAP,CAAeI,EAAxB,CAA6BD,CAA7B,gCAAsCA,CAAtC,EAA4CL,MAAM,CAACE,OAAP,CAAeK,IAA3D,CADyB,EAAlB,CAFX,GAMF,IAAK,aAAL,CACE,sCACKR,KADL,MAEEI,OAAO,CAAEJ,KAAK,CAACI,OAAN,CAAcK,MAAd,CAAqB,SAACH,CAAD,QAAOA,CAAAA,CAAC,CAACC,EAAF,GAASN,MAAM,CAACE,OAAvB,EAArB,CAFX,GAIF,QACE,MAAOH,CAAAA,KAAP,CArBJ,CAuBD,CAxBD,CA0BA,MAAO,IAAMU,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,MAAD,CAAY,CACpC,+FAAO,iBAAOC,QAAP,iIAGDD,MAAM,GAAK,YAHV,gDAIWb,CAAAA,WAAW,CAACe,QAAZ,CAAqBF,MAArB,CAA6B,EAA7B,CAAiC,CAAjC,CAJX,QAIHG,KAJG,kEAMWhB,CAAAA,WAAW,CAACiB,WAAZ,CAAwB,EAAxB,CAA4B,CAA5B,CANX,QAMHD,KANG,sBASLF,QAAQ,CAAC,CACPV,IAAI,CAAE,WADC,CAEPC,OAAO,CAAEW,KAFF,CAAD,CAAR,CATK,uDAAP,+DAcD,CAfM,CAiBP,MAAO,IAAME,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACL,MAAD,CAASM,IAAT,CAAkB,CAC7C,gGAAO,kBAAOL,QAAP,qIAEDD,MAAM,GAAK,YAFV,kDAGWb,CAAAA,WAAW,CAACe,QAAZ,CAAqBF,MAArB,CAA6B,EAA7B,CAAiCM,IAAjC,CAHX,QAGHH,KAHG,qEAKWhB,CAAAA,WAAW,CAACiB,WAAZ,CAAwB,EAAxB,CAA4BE,IAA5B,CALX,QAKHH,KALG,uBAQLF,QAAQ,CAAC,CACPV,IAAI,CAAE,iBADC,CAEPC,OAAO,CAAEW,KAFF,CAAD,CAAR,CARK,yDAAP,iEAaD,CAdM,CAgBP,MAAO,IAAMI,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACX,EAAD,CAAKY,SAAL,CAAgBC,WAAhB,CAAgC,CAC1D,gGAAO,kBAAOR,QAAP,sIACDS,WADC,CACaF,SAAS,CAACG,MAAV,CAAmBF,WAAW,CAACE,MAD5C,CAEL,GAAID,WAAW,CAAG,CAAlB,CAAqB,CACnBA,WAAW,CAAG,CAAd,CACD,CAEDT,QAAQ,CAAC,CACPV,IAAI,CAAE,aADC,CAEPC,OAAO,CAAE,CAAEI,EAAE,CAAFA,EAAF,CAAMC,IAAI,CAAE,CAAEW,SAAS,CAATA,SAAF,CAAaE,WAAW,CAAXA,WAAb,CAA0BD,WAAW,CAAXA,WAA1B,CAAZ,CAFF,CAAD,CAAR,CANK,uBAWCtB,CAAAA,WAAW,CAACyB,UAAZ,CAAuBhB,EAAvB,CAXD,yDAAP,iEAaD,CAdM,CAgBP,MAAO,IAAMiB,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACjB,EAAD,CAAKa,WAAL,CAAkBD,SAAlB,CAAgC,CAC5D,gGAAO,kBAAOP,QAAP,sIACDS,WADC,CACaF,SAAS,CAACG,MAAV,CAAmBF,WAAW,CAACE,MAD5C,CAEL,GAAID,WAAW,CAAG,CAAlB,CAAqB,CACnBA,WAAW,CAAG,CAAd,CACD,CAEDT,QAAQ,CAAC,CACPV,IAAI,CAAE,aADC,CAEPC,OAAO,CAAE,CAAEI,EAAE,CAAFA,EAAF,CAAMC,IAAI,CAAE,CAAEW,SAAS,CAATA,SAAF,CAAaE,WAAW,CAAXA,WAAb,CAA0BD,WAAW,CAAXA,WAA1B,CAAZ,CAFF,CAAD,CAAR,CANK,uBAWCtB,CAAAA,WAAW,CAAC2B,YAAZ,CAAyBlB,EAAzB,CAXD,yDAAP,iEAaD,CAdM,CAgBP,MAAO,IAAMmB,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACnB,EAAD,CAAQ,CAChC,gGAAO,kBAAOK,QAAP,6IACCd,CAAAA,WAAW,CAAC6B,UAAZ,CAAuBpB,EAAvB,CADD,QAGLK,QAAQ,CAAC,CACPV,IAAI,CAAE,aADC,CAEPC,OAAO,CAAEI,EAFF,CAAD,CAAR,CAHK,wDAAP,iEAQD,CATM,CAWP,cAAeR,CAAAA,WAAf","sourcesContent":["import postService from '../services/posts';\n\nconst postReducer = (state = null, action) => {\n  switch (action.type) {\n    case 'SET_POSTS':\n      return action.payload;\n    case 'LOAD_MORE_POSTS':\n      return {\n        ...action.payload,\n        results: [...state.results, ...action.payload.results],\n      };\n    case 'TOGGLE_VOTE':\n      return {\n        ...state,\n        results: state.results.map((r) =>\n          r.id !== action.payload.id ? r : { ...r, ...action.payload.data }\n        ),\n      };\n    case 'DELETE_POST':\n      return {\n        ...state,\n        results: state.results.filter((r) => r.id !== action.payload),\n      };\n    default:\n      return state;\n  }\n};\n\nexport const fetchPosts = (sortBy) => {\n  return async (dispatch) => {\n    let posts;\n\n    if (sortBy !== 'subscribed') {\n      posts = await postService.getPosts(sortBy, 10, 1);\n    } else {\n      posts = await postService.getSubPosts(10, 1);\n    }\n\n    dispatch({\n      type: 'SET_POSTS',\n      payload: posts,\n    });\n  };\n};\n\nexport const loadMorePosts = (sortBy, page) => {\n  return async (dispatch) => {\n    let posts;\n    if (sortBy !== 'subscribed') {\n      posts = await postService.getPosts(sortBy, 10, page);\n    } else {\n      posts = await postService.getSubPosts(10, page);\n    }\n\n    dispatch({\n      type: 'LOAD_MORE_POSTS',\n      payload: posts,\n    });\n  };\n};\n\nexport const toggleUpvote = (id, upvotedBy, downvotedBy) => {\n  return async (dispatch) => {\n    let pointsCount = upvotedBy.length - downvotedBy.length;\n    if (pointsCount < 0) {\n      pointsCount = 0;\n    }\n\n    dispatch({\n      type: 'TOGGLE_VOTE',\n      payload: { id, data: { upvotedBy, pointsCount, downvotedBy } },\n    });\n\n    await postService.upvotePost(id);\n  };\n};\n\nexport const toggleDownvote = (id, downvotedBy, upvotedBy) => {\n  return async (dispatch) => {\n    let pointsCount = upvotedBy.length - downvotedBy.length;\n    if (pointsCount < 0) {\n      pointsCount = 0;\n    }\n\n    dispatch({\n      type: 'TOGGLE_VOTE',\n      payload: { id, data: { upvotedBy, pointsCount, downvotedBy } },\n    });\n\n    await postService.downvotePost(id);\n  };\n};\n\nexport const removePost = (id) => {\n  return async (dispatch) => {\n    await postService.deletePost(id);\n\n    dispatch({\n      type: 'DELETE_POST',\n      payload: id,\n    });\n  };\n};\n\nexport default postReducer;\n"]},"metadata":{},"sourceType":"module"}