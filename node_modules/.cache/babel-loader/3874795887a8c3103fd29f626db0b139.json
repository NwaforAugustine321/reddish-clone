{"ast":null,"code":"import _regeneratorRuntime from\"/home/thaddydore/Desktop/reddish-clone/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/thaddydore/Desktop/reddish-clone/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import axios from'axios';import backendUrl from'../backendUrl';import{token}from'./auth';var baseUrl=\"\".concat(backendUrl,\"/api/subreddits\");var setConfig=function setConfig(){return{headers:{'x-auth-token':token}};};var getAllSubreddits=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get(baseUrl);case 2:response=_context.sent;return _context.abrupt(\"return\",response.data);case 4:case\"end\":return _context.stop();}}},_callee);}));return function getAllSubreddits(){return _ref.apply(this,arguments);};}();var getSubreddit=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(subredditName,sortBy,limit,page){var response;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return axios.get(\"\".concat(baseUrl,\"/r/\").concat(subredditName,\"/?sortby=\").concat(sortBy,\"&limit=\").concat(limit,\"&page=\").concat(page));case 2:response=_context2.sent;return _context2.abrupt(\"return\",response.data);case 4:case\"end\":return _context2.stop();}}},_callee2);}));return function getSubreddit(_x,_x2,_x3,_x4){return _ref2.apply(this,arguments);};}();var createSubreddit=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(subredditObj){var response;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return axios.post(\"\".concat(baseUrl),subredditObj,setConfig());case 2:response=_context3.sent;return _context3.abrupt(\"return\",response.data);case 4:case\"end\":return _context3.stop();}}},_callee3);}));return function createSubreddit(_x5){return _ref3.apply(this,arguments);};}();var subscribeSub=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(id){var response;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return axios.post(\"\".concat(baseUrl,\"/\").concat(id,\"/subscribe\"),null,setConfig());case 2:response=_context4.sent;return _context4.abrupt(\"return\",response.data);case 4:case\"end\":return _context4.stop();}}},_callee4);}));return function subscribeSub(_x6){return _ref4.apply(this,arguments);};}();var updateDescription=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(id,descriptionObj){var response;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.next=2;return axios.patch(\"\".concat(baseUrl,\"/\").concat(id),descriptionObj,setConfig());case 2:response=_context5.sent;return _context5.abrupt(\"return\",response.data);case 4:case\"end\":return _context5.stop();}}},_callee5);}));return function updateDescription(_x7,_x8){return _ref5.apply(this,arguments);};}();var getTopSubreddits=/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(){var response;return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:_context6.next=2;return axios.get(\"\".concat(baseUrl,\"/top10\"));case 2:response=_context6.sent;return _context6.abrupt(\"return\",response.data);case 4:case\"end\":return _context6.stop();}}},_callee6);}));return function getTopSubreddits(){return _ref6.apply(this,arguments);};}();var subService={getAllSubreddits:getAllSubreddits,createSubreddit:createSubreddit,getSubreddit:getSubreddit,subscribeSub:subscribeSub,updateDescription:updateDescription,getTopSubreddits:getTopSubreddits};export default subService;","map":{"version":3,"sources":["/home/thaddydore/Desktop/reddish-clone/client/src/services/subs.js"],"names":["axios","backendUrl","token","baseUrl","setConfig","headers","getAllSubreddits","get","response","data","getSubreddit","subredditName","sortBy","limit","page","createSubreddit","subredditObj","post","subscribeSub","id","updateDescription","descriptionObj","patch","getTopSubreddits","subService"],"mappings":"qUAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,UAAP,KAAuB,eAAvB,CACA,OAASC,KAAT,KAAsB,QAAtB,CAEA,GAAMC,CAAAA,OAAO,WAAMF,UAAN,mBAAb,CAEA,GAAMG,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACtB,MAAO,CACLC,OAAO,CAAE,CAAE,eAAgBH,KAAlB,CADJ,CAAP,CAGD,CAJD,CAMA,GAAMI,CAAAA,gBAAgB,0FAAG,sKACAN,CAAAA,KAAK,CAACO,GAAN,CAAUJ,OAAV,CADA,QACjBK,QADiB,+CAEhBA,QAAQ,CAACC,IAFO,wDAAH,kBAAhBH,CAAAA,gBAAgB,0CAAtB,CAKA,GAAMI,CAAAA,YAAY,2FAAG,kBAAOC,aAAP,CAAsBC,MAAtB,CAA8BC,KAA9B,CAAqCC,IAArC,0JACId,CAAAA,KAAK,CAACO,GAAN,WAClBJ,OADkB,eACLQ,aADK,qBACoBC,MADpB,mBACoCC,KADpC,kBACkDC,IADlD,EADJ,QACbN,QADa,iDAIZA,QAAQ,CAACC,IAJG,0DAAH,kBAAZC,CAAAA,YAAY,yDAAlB,CAOA,GAAMK,CAAAA,eAAe,2FAAG,kBAAOC,YAAP,0JACChB,CAAAA,KAAK,CAACiB,IAAN,WAAcd,OAAd,EAAyBa,YAAzB,CAAuCZ,SAAS,EAAhD,CADD,QAChBI,QADgB,iDAEfA,QAAQ,CAACC,IAFM,0DAAH,kBAAfM,CAAAA,eAAe,8CAArB,CAKA,GAAMG,CAAAA,YAAY,2FAAG,kBAAOC,EAAP,0JACInB,CAAAA,KAAK,CAACiB,IAAN,WAClBd,OADkB,aACPgB,EADO,eAErB,IAFqB,CAGrBf,SAAS,EAHY,CADJ,QACbI,QADa,iDAMZA,QAAQ,CAACC,IANG,0DAAH,kBAAZS,CAAAA,YAAY,8CAAlB,CASA,GAAME,CAAAA,iBAAiB,2FAAG,kBAAOD,EAAP,CAAWE,cAAX,0JACDrB,CAAAA,KAAK,CAACsB,KAAN,WAClBnB,OADkB,aACPgB,EADO,EAErBE,cAFqB,CAGrBjB,SAAS,EAHY,CADC,QAClBI,QADkB,iDAMjBA,QAAQ,CAACC,IANQ,0DAAH,kBAAjBW,CAAAA,iBAAiB,kDAAvB,CASA,GAAMG,CAAAA,gBAAgB,2FAAG,4KACAvB,CAAAA,KAAK,CAACO,GAAN,WAAaJ,OAAb,WADA,QACjBK,QADiB,iDAEhBA,QAAQ,CAACC,IAFO,0DAAH,kBAAhBc,CAAAA,gBAAgB,2CAAtB,CAKA,GAAMC,CAAAA,UAAU,CAAG,CACjBlB,gBAAgB,CAAhBA,gBADiB,CAEjBS,eAAe,CAAfA,eAFiB,CAGjBL,YAAY,CAAZA,YAHiB,CAIjBQ,YAAY,CAAZA,YAJiB,CAKjBE,iBAAiB,CAAjBA,iBALiB,CAMjBG,gBAAgB,CAAhBA,gBANiB,CAAnB,CASA,cAAeC,CAAAA,UAAf","sourcesContent":["import axios from 'axios';\nimport backendUrl from '../backendUrl';\nimport { token } from './auth';\n\nconst baseUrl = `${backendUrl}/api/subreddits`;\n\nconst setConfig = () => {\n  return {\n    headers: { 'x-auth-token': token },\n  };\n};\n\nconst getAllSubreddits = async () => {\n  const response = await axios.get(baseUrl);\n  return response.data;\n};\n\nconst getSubreddit = async (subredditName, sortBy, limit, page) => {\n  const response = await axios.get(\n    `${baseUrl}/r/${subredditName}/?sortby=${sortBy}&limit=${limit}&page=${page}`\n  );\n  return response.data;\n};\n\nconst createSubreddit = async (subredditObj) => {\n  const response = await axios.post(`${baseUrl}`, subredditObj, setConfig());\n  return response.data;\n};\n\nconst subscribeSub = async (id) => {\n  const response = await axios.post(\n    `${baseUrl}/${id}/subscribe`,\n    null,\n    setConfig()\n  );\n  return response.data;\n};\n\nconst updateDescription = async (id, descriptionObj) => {\n  const response = await axios.patch(\n    `${baseUrl}/${id}`,\n    descriptionObj,\n    setConfig()\n  );\n  return response.data;\n};\n\nconst getTopSubreddits = async () => {\n  const response = await axios.get(`${baseUrl}/top10`);\n  return response.data;\n};\n\nconst subService = {\n  getAllSubreddits,\n  createSubreddit,\n  getSubreddit,\n  subscribeSub,\n  updateDescription,\n  getTopSubreddits,\n};\n\nexport default subService;\n"]},"metadata":{},"sourceType":"module"}