{"ast":null,"code":"import _regeneratorRuntime from\"/home/thaddydore/Desktop/reddish-clone/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/thaddydore/Desktop/reddish-clone/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/thaddydore/Desktop/reddish-clone/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{useDispatch}from'react-redux';import{loginUser,signupUser}from'../reducers/userReducer';import{Formik,Form}from'formik';import*as yup from'yup';import{TextInput}from'./FormikMuiFields';import{notify}from'../reducers/notificationReducer';import AlertMessage from'./AlertMessage';import getErrorMsg from'../utils/getErrorMsg';import{Button,Typography,Divider,InputAdornment,IconButton}from'@material-ui/core';import{useAuthStyles}from'../styles/muiStyles';import PersonIcon from'@material-ui/icons/Person';import LockIcon from'@material-ui/icons/Lock';import ExitToAppIcon from'@material-ui/icons/ExitToApp';import PersonAddIcon from'@material-ui/icons/PersonAdd';import VisibilityOffIcon from'@material-ui/icons/VisibilityOff';import VisibilityIcon from'@material-ui/icons/Visibility';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var validationSchemaSignup=yup.object({username:yup.string().required('Required').max(20,'Must be at most 20 characters').min(3,'Must be at least 3 characters').matches(/^[a-zA-Z0-9-_]*$/,'Only alphanumeric characters allowed, no spaces/symbols'),password:yup.string().required('Required').min(6,'Must be at least 6 characters')});var validationSchemaLogin=yup.object({username:yup.string().required('Required'),password:yup.string().required('Required')});var AuthForm=function AuthForm(){var dispatch=useDispatch();var _useState=useState('login'),_useState2=_slicedToArray(_useState,2),authType=_useState2[0],setAuthType=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),showPass=_useState4[0],setShowPass=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),error=_useState6[0],setError=_useState6[1];var classes=useAuthStyles(authType)();var handleLogin=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(values,_ref){var setSubmitting;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setSubmitting=_ref.setSubmitting;_context.prev=1;setSubmitting(true);_context.next=5;return dispatch(loginUser(values));case 5:dispatch(notify(\"Welcome, \".concat(values.username,\". You're logged in!\"),'success'));_context.next=12;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](1);setSubmitting(false);setError(getErrorMsg(_context.t0));case 12:case\"end\":return _context.stop();}}},_callee,null,[[1,8]]);}));return function handleLogin(_x,_x2){return _ref2.apply(this,arguments);};}();var handleSignup=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(values,_ref3){var setSubmitting;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:setSubmitting=_ref3.setSubmitting;_context2.prev=1;setSubmitting(true);_context2.next=5;return dispatch(signupUser(values));case 5:dispatch(notify(\"Welcome, \".concat(values.username,\". You've been successfully registered.\"),'success'));_context2.next=12;break;case 8:_context2.prev=8;_context2.t0=_context2[\"catch\"](1);setSubmitting(false);setError(getErrorMsg(_context2.t0));case 12:case\"end\":return _context2.stop();}}},_callee2,null,[[1,8]]);}));return function handleSignup(_x3,_x4){return _ref4.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:classes.authWrapper,children:/*#__PURE__*/_jsx(Formik,{validateOnChange:true,initialValues:{username:'',password:''},onSubmit:authType==='login'?handleLogin:handleSignup,validationSchema:authType==='login'?validationSchemaLogin:validationSchemaSignup,children:function children(_ref5){var isSubmitting=_ref5.isSubmitting;return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Form,{className:classes.form,children:[/*#__PURE__*/_jsx(Typography,{variant:\"h5\",color:\"secondary\",className:classes.formTitle,children:authType==='login'?'Login to your account':'Create a new account'}),/*#__PURE__*/_jsxs(\"div\",{className:classes.input,children:[/*#__PURE__*/_jsx(PersonIcon,{className:classes.inputIcon,color:\"primary\"}),/*#__PURE__*/_jsx(TextInput,{name:\"username\",type:\"text\",placeholder:\"Enter username\",label:\"Username\",required:true,fullWidth:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:classes.input,children:[/*#__PURE__*/_jsx(LockIcon,{className:classes.inputIcon,color:\"primary\"}),/*#__PURE__*/_jsx(TextInput,{name:\"password\",type:showPass?'text':'password',placeholder:\"Enter password\",label:\"Password\",required:true,fullWidth:true,InputProps:{endAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"end\",children:/*#__PURE__*/_jsx(IconButton,{onClick:function onClick(){return setShowPass(function(prevState){return!prevState;});},children:showPass?/*#__PURE__*/_jsx(VisibilityOffIcon,{color:\"primary\"}):/*#__PURE__*/_jsx(VisibilityIcon,{color:\"primary\"})})})}})]}),/*#__PURE__*/_jsx(Button,{type:\"submit\",color:\"secondary\",variant:\"contained\",size:\"large\",startIcon:authType==='login'?/*#__PURE__*/_jsx(ExitToAppIcon,{}):/*#__PURE__*/_jsx(PersonAddIcon,{}),className:classes.submitButton,disabled:isSubmitting,children:authType==='login'?isSubmitting?'Logging In':'Login':isSubmitting?'Signing Up':'Sign Up'})]}),/*#__PURE__*/_jsx(Divider,{orientation:\"vertical\",flexItem:true,className:classes.divider}),/*#__PURE__*/_jsxs(\"div\",{className:classes.sidePanel,children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",className:classes.switchText,color:\"primary\",children:authType==='login'?\"Don't have an account?\":'Already have an account?'}),/*#__PURE__*/_jsx(Button,{onClick:function onClick(){return authType==='login'?setAuthType('signup'):setAuthType('login');},fullWidth:true,size:\"large\",color:\"primary\",variant:\"outlined\",startIcon:authType==='login'?/*#__PURE__*/_jsx(PersonAddIcon,{}):/*#__PURE__*/_jsx(ExitToAppIcon,{}),disabled:isSubmitting,children:authType==='login'?'Sign Up':'Login'})]})]});}})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(AlertMessage,{error:error,severity:\"error\",clearError:function clearError(){return setError(null);}})})]});};export default AuthForm;","map":{"version":3,"sources":["/home/thaddydore/Desktop/reddish-clone/client/src/components/AuthForm.js"],"names":["React","useState","useDispatch","loginUser","signupUser","Formik","Form","yup","TextInput","notify","AlertMessage","getErrorMsg","Button","Typography","Divider","InputAdornment","IconButton","useAuthStyles","PersonIcon","LockIcon","ExitToAppIcon","PersonAddIcon","VisibilityOffIcon","VisibilityIcon","validationSchemaSignup","object","username","string","required","max","min","matches","password","validationSchemaLogin","AuthForm","dispatch","authType","setAuthType","showPass","setShowPass","error","setError","classes","handleLogin","values","setSubmitting","handleSignup","authWrapper","isSubmitting","form","formTitle","input","inputIcon","endAdornment","prevState","submitButton","divider","sidePanel","switchText"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { loginUser, signupUser } from '../reducers/userReducer';\nimport { Formik, Form } from 'formik';\nimport * as yup from 'yup';\nimport { TextInput } from './FormikMuiFields';\nimport { notify } from '../reducers/notificationReducer';\nimport AlertMessage from './AlertMessage';\nimport getErrorMsg from '../utils/getErrorMsg';\n\nimport {\n  Button,\n  Typography,\n  Divider,\n  InputAdornment,\n  IconButton,\n} from '@material-ui/core';\nimport { useAuthStyles } from '../styles/muiStyles';\nimport PersonIcon from '@material-ui/icons/Person';\nimport LockIcon from '@material-ui/icons/Lock';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\n\nconst validationSchemaSignup = yup.object({\n  username: yup\n    .string()\n    .required('Required')\n    .max(20, 'Must be at most 20 characters')\n    .min(3, 'Must be at least 3 characters')\n    .matches(\n      /^[a-zA-Z0-9-_]*$/,\n      'Only alphanumeric characters allowed, no spaces/symbols'\n    ),\n\n  password: yup\n    .string()\n    .required('Required')\n    .min(6, 'Must be at least 6 characters'),\n});\n\nconst validationSchemaLogin = yup.object({\n  username: yup.string().required('Required'),\n  password: yup.string().required('Required'),\n});\n\nconst AuthForm = () => {\n  const dispatch = useDispatch();\n  const [authType, setAuthType] = useState('login');\n  const [showPass, setShowPass] = useState(false);\n  const [error, setError] = useState(null);\n  const classes = useAuthStyles(authType)();\n\n  const handleLogin = async (values, { setSubmitting }) => {\n    try {\n      setSubmitting(true);\n      await dispatch(loginUser(values));\n      dispatch(\n        notify(`Welcome, ${values.username}. You're logged in!`, 'success')\n      );\n    } catch (err) {\n      setSubmitting(false);\n      setError(getErrorMsg(err));\n    }\n  };\n\n  const handleSignup = async (values, { setSubmitting }) => {\n    try {\n      setSubmitting(true);\n      await dispatch(signupUser(values));\n      dispatch(\n        notify(\n          `Welcome, ${values.username}. You've been successfully registered.`,\n          'success'\n        )\n      );\n    } catch (err) {\n      setSubmitting(false);\n      setError(getErrorMsg(err));\n    }\n  };\n\n  return (\n    <div>\n      <div className={classes.authWrapper}>\n        <Formik\n          validateOnChange={true}\n          initialValues={{ username: '', password: '' }}\n          onSubmit={authType === 'login' ? handleLogin : handleSignup}\n          validationSchema={\n            authType === 'login'\n              ? validationSchemaLogin\n              : validationSchemaSignup\n          }\n        >\n          {({ isSubmitting }) => (\n            <>\n              <Form className={classes.form}>\n                <Typography\n                  variant=\"h5\"\n                  color=\"secondary\"\n                  className={classes.formTitle}\n                >\n                  {authType === 'login'\n                    ? 'Login to your account'\n                    : 'Create a new account'}\n                </Typography>\n                <div className={classes.input}>\n                  <PersonIcon className={classes.inputIcon} color=\"primary\" />\n                  <TextInput\n                    name=\"username\"\n                    type=\"text\"\n                    placeholder=\"Enter username\"\n                    label=\"Username\"\n                    required\n                    fullWidth\n                  />\n                </div>\n                <div className={classes.input}>\n                  <LockIcon className={classes.inputIcon} color=\"primary\" />\n                  <TextInput\n                    name=\"password\"\n                    type={showPass ? 'text' : 'password'}\n                    placeholder=\"Enter password\"\n                    label=\"Password\"\n                    required\n                    fullWidth\n                    InputProps={{\n                      endAdornment: (\n                        <InputAdornment position=\"end\">\n                          <IconButton\n                            onClick={() =>\n                              setShowPass((prevState) => !prevState)\n                            }\n                          >\n                            {showPass ? (\n                              <VisibilityOffIcon color=\"primary\" />\n                            ) : (\n                              <VisibilityIcon color=\"primary\" />\n                            )}\n                          </IconButton>\n                        </InputAdornment>\n                      ),\n                    }}\n                  />\n                </div>\n                <Button\n                  type=\"submit\"\n                  color=\"secondary\"\n                  variant=\"contained\"\n                  size=\"large\"\n                  startIcon={\n                    authType === 'login' ? <ExitToAppIcon /> : <PersonAddIcon />\n                  }\n                  className={classes.submitButton}\n                  disabled={isSubmitting}\n                >\n                  {authType === 'login'\n                    ? isSubmitting\n                      ? 'Logging In'\n                      : 'Login'\n                    : isSubmitting\n                    ? 'Signing Up'\n                    : 'Sign Up'}\n                </Button>\n              </Form>\n              <Divider\n                orientation=\"vertical\"\n                flexItem\n                className={classes.divider}\n              />\n              <div className={classes.sidePanel}>\n                <Typography\n                  variant=\"h6\"\n                  className={classes.switchText}\n                  color=\"primary\"\n                >\n                  {authType === 'login'\n                    ? `Don't have an account?`\n                    : 'Already have an account?'}\n                </Typography>\n                <Button\n                  onClick={() =>\n                    authType === 'login'\n                      ? setAuthType('signup')\n                      : setAuthType('login')\n                  }\n                  fullWidth\n                  size=\"large\"\n                  color=\"primary\"\n                  variant=\"outlined\"\n                  startIcon={\n                    authType === 'login' ? <PersonAddIcon /> : <ExitToAppIcon />\n                  }\n                  disabled={isSubmitting}\n                >\n                  {authType === 'login' ? 'Sign Up' : 'Login'}\n                </Button>\n              </div>\n            </>\n          )}\n        </Formik>\n      </div>\n      <div>\n        <AlertMessage\n          error={error}\n          severity=\"error\"\n          clearError={() => setError(null)}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default AuthForm;\n"]},"metadata":{},"sourceType":"module"}