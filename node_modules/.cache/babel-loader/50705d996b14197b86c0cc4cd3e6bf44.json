{"ast":null,"code":"import _slicedToArray from\"/home/thaddydore/Desktop/reddish-clone/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{Link as RouterLink}from'react-router-dom';import AuthFormModal from'./AuthFormModal';import SubFormModal from'./SubFormModal';import UpdateAvatarModal from'./UpdateAvatarModal';import DarkModeMenuItem from'./DarkModeMenuItem';import{getCircularAvatar}from'../utils/cloudinaryTransform';import storageService from'../utils/localStorage';import{Button,Menu,MenuItem,Avatar,Typography,ListItemIcon,Divider}from'@material-ui/core';import{useUserMenuStyles}from'../styles/muiStyles';import FilterVintageIcon from'@material-ui/icons/FilterVintage';import AccountCircleIcon from'@material-ui/icons/AccountCircle';import PowerSettingsNewIcon from'@material-ui/icons/PowerSettingsNew';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var DesktopUserMenu=function DesktopUserMenu(_ref){var _loggedUser$avatar;var user=_ref.user,handleLogout=_ref.handleLogout;var classes=useUserMenuStyles();var _useState=useState(null),_useState2=_slicedToArray(_useState,2),anchorEl=_useState2[0],setAnchorEl=_useState2[1];var handleMenu=function handleMenu(event){setAnchorEl(event.currentTarget);};var handleClose=function handleClose(){setAnchorEl(null);};var handleLogoutClick=function handleLogoutClick(){handleClose();handleLogout();};var loggedUser=storageService.loadUser()||user;return/*#__PURE__*/_jsx(\"div\",{children:loggedUser?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Button,{onClick:handleMenu,className:classes.userBtn,children:[(loggedUser===null||loggedUser===void 0?void 0:(_loggedUser$avatar=loggedUser.avatar)===null||_loggedUser$avatar===void 0?void 0:_loggedUser$avatar.exists)?/*#__PURE__*/_jsx(Avatar,{alt:loggedUser.username,src:getCircularAvatar(loggedUser.avatar.imageLink),variant:\"rounded\",className:classes.avatar}):/*#__PURE__*/_jsx(Avatar,{variant:\"rounded\",className:classes.avatar,children:loggedUser.username[0]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Typography,{color:\"secondary\",children:loggedUser.username}),/*#__PURE__*/_jsxs(Typography,{variant:\"caption\",className:classes.karmaWrapper,children:[/*#__PURE__*/_jsx(FilterVintageIcon,{fontSize:\"inherit\",style:{marginRight:'0.2em'},color:\"secondary\"}),loggedUser.karma,\" karma\"]})]})]}),/*#__PURE__*/_jsxs(Menu,{anchorEl:anchorEl,anchorOrigin:{vertical:'top',horizontal:'right'},keepMounted:true,transformOrigin:{vertical:'top',horizontal:'right'},open:Boolean(anchorEl),onClose:handleClose,children:[/*#__PURE__*/_jsx(MenuItem,{component:RouterLink,to:\"/u/\".concat(loggedUser.username),onClick:handleClose,children:/*#__PURE__*/_jsxs(ListItemIcon,{children:[/*#__PURE__*/_jsx(AccountCircleIcon,{style:{marginRight:7}}),\" My Profile\"]})}),/*#__PURE__*/_jsx(SubFormModal,{type:\"menu\",handleCloseMenu:handleClose}),/*#__PURE__*/_jsx(UpdateAvatarModal,{handleCloseMenu:handleClose,user:loggedUser}),/*#__PURE__*/_jsx(MenuItem,{onClick:handleLogoutClick,children:/*#__PURE__*/_jsxs(ListItemIcon,{children:[/*#__PURE__*/_jsx(PowerSettingsNewIcon,{style:{marginRight:7}}),\" Logout\"]})}),/*#__PURE__*/_jsx(Divider,{variant:\"middle\"}),/*#__PURE__*/_jsx(DarkModeMenuItem,{closeMenu:handleClose})]})]}):/*#__PURE__*/_jsxs(\"div\",{className:classes.navItems,children:[/*#__PURE__*/_jsx(AuthFormModal,{}),/*#__PURE__*/_jsx(DarkModeMenuItem,{closeMenu:handleClose,navItem:true})]})});};export default DesktopUserMenu;","map":{"version":3,"sources":["/home/thaddydore/Desktop/reddish-clone/client/src/components/DesktopUserMenu.js"],"names":["React","useState","Link","RouterLink","AuthFormModal","SubFormModal","UpdateAvatarModal","DarkModeMenuItem","getCircularAvatar","storageService","Button","Menu","MenuItem","Avatar","Typography","ListItemIcon","Divider","useUserMenuStyles","FilterVintageIcon","AccountCircleIcon","PowerSettingsNewIcon","DesktopUserMenu","user","handleLogout","classes","anchorEl","setAnchorEl","handleMenu","event","currentTarget","handleClose","handleLogoutClick","loggedUser","loadUser","userBtn","avatar","exists","username","imageLink","karmaWrapper","marginRight","karma","vertical","horizontal","Boolean","navItems"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport AuthFormModal from './AuthFormModal';\nimport SubFormModal from './SubFormModal';\nimport UpdateAvatarModal from './UpdateAvatarModal';\nimport DarkModeMenuItem from './DarkModeMenuItem';\nimport { getCircularAvatar } from '../utils/cloudinaryTransform';\nimport storageService from '../utils/localStorage';\n\nimport {\n  Button,\n  Menu,\n  MenuItem,\n  Avatar,\n  Typography,\n  ListItemIcon,\n  Divider,\n} from '@material-ui/core';\nimport { useUserMenuStyles } from '../styles/muiStyles';\nimport FilterVintageIcon from '@material-ui/icons/FilterVintage';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport PowerSettingsNewIcon from '@material-ui/icons/PowerSettingsNew';\n\nconst DesktopUserMenu = ({ user, handleLogout }) => {\n  const classes = useUserMenuStyles();\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleMenu = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleLogoutClick = () => {\n    handleClose();\n    handleLogout();\n  };\n\n  const loggedUser = storageService.loadUser() || user;\n\n  return (\n    <div>\n      {loggedUser ? (\n        <>\n          <Button onClick={handleMenu} className={classes.userBtn}>\n            {loggedUser?.avatar?.exists ? (\n              <Avatar\n                alt={loggedUser.username}\n                src={getCircularAvatar(loggedUser.avatar.imageLink)}\n                variant=\"rounded\"\n                className={classes.avatar}\n              />\n            ) : (\n              <Avatar variant=\"rounded\" className={classes.avatar}>\n                {loggedUser.username[0]}\n              </Avatar>\n            )}\n            <div>\n              <Typography color=\"secondary\">{loggedUser.username}</Typography>\n              <Typography variant=\"caption\" className={classes.karmaWrapper}>\n                <FilterVintageIcon\n                  fontSize=\"inherit\"\n                  style={{ marginRight: '0.2em' }}\n                  color=\"secondary\"\n                />\n                {loggedUser.karma} karma\n              </Typography>\n            </div>\n          </Button>\n          <Menu\n            anchorEl={anchorEl}\n            anchorOrigin={{\n              vertical: 'top',\n              horizontal: 'right',\n            }}\n            keepMounted\n            transformOrigin={{\n              vertical: 'top',\n              horizontal: 'right',\n            }}\n            open={Boolean(anchorEl)}\n            onClose={handleClose}\n          >\n            <MenuItem\n              component={RouterLink}\n              to={`/u/${loggedUser.username}`}\n              onClick={handleClose}\n            >\n              <ListItemIcon>\n                <AccountCircleIcon style={{ marginRight: 7 }} /> My Profile\n              </ListItemIcon>\n            </MenuItem>\n            <SubFormModal type=\"menu\" handleCloseMenu={handleClose} />\n            <UpdateAvatarModal\n              handleCloseMenu={handleClose}\n              user={loggedUser}\n            />\n            <MenuItem onClick={handleLogoutClick}>\n              <ListItemIcon>\n                <PowerSettingsNewIcon style={{ marginRight: 7 }} /> Logout\n              </ListItemIcon>\n            </MenuItem>\n            <Divider variant=\"middle\" />\n            <DarkModeMenuItem closeMenu={handleClose} />\n          </Menu>\n        </>\n      ) : (\n        <div className={classes.navItems}>\n          <AuthFormModal />\n          <DarkModeMenuItem closeMenu={handleClose} navItem={true} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default DesktopUserMenu;\n"]},"metadata":{},"sourceType":"module"}