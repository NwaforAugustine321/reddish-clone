{"ast":null,"code":"var storageKeyToken='readifyUserKey';var storageKeyDarkMode='readifyDarkMode';var saveUser=function saveUser(user){return localStorage.setItem(storageKeyToken,JSON.stringify(user));};var loadUser=function loadUser(){return JSON.parse(localStorage.getItem(storageKeyToken));};var logoutUser=function logoutUser(){return localStorage.removeItem(storageKeyToken);};var saveDarkMode=function saveDarkMode(boolean){return localStorage.setItem(storageKeyDarkMode,boolean);};var loadDarkMode=function loadDarkMode(){return localStorage.getItem(storageKeyDarkMode);};var storage={saveUser:saveUser,loadUser:loadUser,logoutUser:logoutUser,saveDarkMode:saveDarkMode,loadDarkMode:loadDarkMode};export default storage;","map":{"version":3,"sources":["/home/thaddydore/Desktop/reddish-clone/client/src/utils/localStorage.js"],"names":["storageKeyToken","storageKeyDarkMode","saveUser","user","localStorage","setItem","JSON","stringify","loadUser","parse","getItem","logoutUser","removeItem","saveDarkMode","boolean","loadDarkMode","storage"],"mappings":"AAAA,GAAMA,CAAAA,eAAe,CAAG,gBAAxB,CACA,GAAMC,CAAAA,kBAAkB,CAAG,iBAA3B,CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,IAAD,QACfC,CAAAA,YAAY,CAACC,OAAb,CAAqBL,eAArB,CAAsCM,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAAtC,CADe,EAAjB,CAGA,GAAMK,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,SAAMF,CAAAA,IAAI,CAACG,KAAL,CAAWL,YAAY,CAACM,OAAb,CAAqBV,eAArB,CAAX,CAAN,EAAjB,CAEA,GAAMW,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,SAAMP,CAAAA,YAAY,CAACQ,UAAb,CAAwBZ,eAAxB,CAAN,EAAnB,CAEA,GAAMa,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,OAAD,QACnBV,CAAAA,YAAY,CAACC,OAAb,CAAqBJ,kBAArB,CAAyCa,OAAzC,CADmB,EAArB,CAGA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,SAAMX,CAAAA,YAAY,CAACM,OAAb,CAAqBT,kBAArB,CAAN,EAArB,CAEA,GAAMe,CAAAA,OAAO,CAAG,CACdd,QAAQ,CAARA,QADc,CAEdM,QAAQ,CAARA,QAFc,CAGdG,UAAU,CAAVA,UAHc,CAIdE,YAAY,CAAZA,YAJc,CAKdE,YAAY,CAAZA,YALc,CAAhB,CAQA,cAAeC,CAAAA,OAAf","sourcesContent":["const storageKeyToken = 'readifyUserKey';\nconst storageKeyDarkMode = 'readifyDarkMode';\n\nconst saveUser = (user) =>\n  localStorage.setItem(storageKeyToken, JSON.stringify(user));\n\nconst loadUser = () => JSON.parse(localStorage.getItem(storageKeyToken));\n\nconst logoutUser = () => localStorage.removeItem(storageKeyToken);\n\nconst saveDarkMode = (boolean) =>\n  localStorage.setItem(storageKeyDarkMode, boolean);\n\nconst loadDarkMode = () => localStorage.getItem(storageKeyDarkMode);\n\nconst storage = {\n  saveUser,\n  loadUser,\n  logoutUser,\n  saveDarkMode,\n  loadDarkMode,\n};\n\nexport default storage;\n"]},"metadata":{},"sourceType":"module"}