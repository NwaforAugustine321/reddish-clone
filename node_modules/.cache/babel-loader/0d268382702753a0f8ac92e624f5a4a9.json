{"ast":null,"code":"import _regeneratorRuntime from\"/home/thaddydore/Desktop/reddish-clone/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/thaddydore/Desktop/reddish-clone/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import React,{useEffect}from'react';import{useDispatch,useSelector}from'react-redux';import{setUser}from'./reducers/userReducer';import{fetchPosts}from'./reducers/postReducer';import{setSubList,setTopSubsList}from'./reducers/subReducer';import{setDarkMode}from'./reducers/themeReducer';import{notify}from'./reducers/notificationReducer';import NavBar from'./components/NavBar';import ToastNotif from'./components/ToastNotif';import Routes from'./Routes';import getErrorMsg from'./utils/getErrorMsg';import{Paper}from'@material-ui/core/';import customTheme from'./styles/customTheme';import{useMainPaperStyles}from'./styles/muiStyles';import{ThemeProvider}from'@material-ui/core/styles';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=function App(){var classes=useMainPaperStyles();var dispatch=useDispatch();var _useSelector=useSelector(function(state){return state;}),darkMode=_useSelector.darkMode;useEffect(function(){var setPostsAndSubreddits=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return dispatch(fetchPosts('hot'));case 3:_context.next=5;return dispatch(setSubList());case 5:_context.next=7;return dispatch(setTopSubsList());case 7:_context.next=12;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](0);dispatch(notify(getErrorMsg(_context.t0),'error'));case 12:case\"end\":return _context.stop();}}},_callee,null,[[0,9]]);}));return function setPostsAndSubreddits(){return _ref.apply(this,arguments);};}();dispatch(setUser());dispatch(setDarkMode());setPostsAndSubreddits();// eslint-disable-next-line react-hooks/exhaustive-deps\n},[]);return/*#__PURE__*/_jsx(ThemeProvider,{theme:customTheme(darkMode),children:/*#__PURE__*/_jsxs(Paper,{className:classes.root,elevation:0,children:[/*#__PURE__*/_jsx(ToastNotif,{}),/*#__PURE__*/_jsx(NavBar,{}),/*#__PURE__*/_jsx(Routes,{})]})});};export default App;","map":{"version":3,"sources":["/home/thaddydore/Desktop/reddish-clone/client/src/App.js"],"names":["React","useEffect","useDispatch","useSelector","setUser","fetchPosts","setSubList","setTopSubsList","setDarkMode","notify","NavBar","ToastNotif","Routes","getErrorMsg","Paper","customTheme","useMainPaperStyles","ThemeProvider","App","classes","dispatch","state","darkMode","setPostsAndSubreddits","root"],"mappings":"qUAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,OAAT,KAAwB,wBAAxB,CACA,OAASC,UAAT,KAA2B,wBAA3B,CACA,OAASC,UAAT,CAAqBC,cAArB,KAA2C,uBAA3C,CACA,OAASC,WAAT,KAA4B,yBAA5B,CACA,OAASC,MAAT,KAAuB,gCAAvB,CACA,MAAOC,CAAAA,MAAP,KAAmB,qBAAnB,CACA,MAAOC,CAAAA,UAAP,KAAuB,yBAAvB,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CACA,MAAOC,CAAAA,WAAP,KAAwB,qBAAxB,CAEA,OAASC,KAAT,KAAsB,oBAAtB,CACA,MAAOC,CAAAA,WAAP,KAAwB,sBAAxB,CACA,OAASC,kBAAT,KAAmC,oBAAnC,CACA,OAASC,aAAT,KAA8B,0BAA9B,C,wFAEA,GAAMC,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,EAAM,CAChB,GAAMC,CAAAA,OAAO,CAAGH,kBAAkB,EAAlC,CACA,GAAMI,CAAAA,QAAQ,CAAGlB,WAAW,EAA5B,CACA,iBAAqBC,WAAW,CAAC,SAACkB,KAAD,QAAWA,CAAAA,KAAX,EAAD,CAAhC,CAAQC,QAAR,cAAQA,QAAR,CAEArB,SAAS,CAAC,UAAM,CACd,GAAMsB,CAAAA,qBAAqB,0FAAG,yKAEpBH,CAAAA,QAAQ,CAACf,UAAU,CAAC,KAAD,CAAX,CAFY,8BAGpBe,CAAAA,QAAQ,CAACd,UAAU,EAAX,CAHY,8BAIpBc,CAAAA,QAAQ,CAACb,cAAc,EAAf,CAJY,uFAM1Ba,QAAQ,CAACX,MAAM,CAACI,WAAW,aAAZ,CAAmB,OAAnB,CAAP,CAAR,CAN0B,oEAAH,kBAArBU,CAAAA,qBAAqB,0CAA3B,CAUAH,QAAQ,CAAChB,OAAO,EAAR,CAAR,CACAgB,QAAQ,CAACZ,WAAW,EAAZ,CAAR,CACAe,qBAAqB,GACrB;AACD,CAfQ,CAeN,EAfM,CAAT,CAiBA,mBACE,KAAC,aAAD,EAAe,KAAK,CAAER,WAAW,CAACO,QAAD,CAAjC,uBACE,MAAC,KAAD,EAAO,SAAS,CAAEH,OAAO,CAACK,IAA1B,CAAgC,SAAS,CAAE,CAA3C,wBACE,KAAC,UAAD,IADF,cAEE,KAAC,MAAD,IAFF,cAGE,KAAC,MAAD,IAHF,GADF,EADF,CASD,CA/BD,CAiCA,cAAeN,CAAAA,GAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setUser } from './reducers/userReducer';\nimport { fetchPosts } from './reducers/postReducer';\nimport { setSubList, setTopSubsList } from './reducers/subReducer';\nimport { setDarkMode } from './reducers/themeReducer';\nimport { notify } from './reducers/notificationReducer';\nimport NavBar from './components/NavBar';\nimport ToastNotif from './components/ToastNotif';\nimport Routes from './Routes';\nimport getErrorMsg from './utils/getErrorMsg';\n\nimport { Paper } from '@material-ui/core/';\nimport customTheme from './styles/customTheme';\nimport { useMainPaperStyles } from './styles/muiStyles';\nimport { ThemeProvider } from '@material-ui/core/styles';\n\nconst App = () => {\n  const classes = useMainPaperStyles();\n  const dispatch = useDispatch();\n  const { darkMode } = useSelector((state) => state);\n\n  useEffect(() => {\n    const setPostsAndSubreddits = async () => {\n      try {\n        await dispatch(fetchPosts('hot'));\n        await dispatch(setSubList());\n        await dispatch(setTopSubsList());\n      } catch (err) {\n        dispatch(notify(getErrorMsg(err), 'error'));\n      }\n    };\n\n    dispatch(setUser());\n    dispatch(setDarkMode());\n    setPostsAndSubreddits();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <ThemeProvider theme={customTheme(darkMode)}>\n      <Paper className={classes.root} elevation={0}>\n        <ToastNotif />\n        <NavBar />\n        <Routes />\n      </Paper>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}