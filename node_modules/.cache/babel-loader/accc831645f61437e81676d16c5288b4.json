{"ast":null,"code":"import _regeneratorRuntime from\"/home/thaddydore/Desktop/reddish-clone/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/thaddydore/Desktop/reddish-clone/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/thaddydore/Desktop/reddish-clone/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{Link as RouterLink}from'react-router-dom';import{useDispatch}from'react-redux';import{addComment}from'../reducers/postCommentsReducer';import{notify}from'../reducers/notificationReducer';import getErrorMsg from'../utils/getErrorMsg';import{Link,Typography,TextField,Button}from'@material-ui/core';import{useCommentInputStyles}from'../styles/muiStyles';import SendIcon from'@material-ui/icons/Send';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CommentInput=function CommentInput(_ref){var user=_ref.user,postId=_ref.postId,isMobile=_ref.isMobile;var classes=useCommentInputStyles();var dispatch=useDispatch();var _useState=useState(''),_useState2=_slicedToArray(_useState,2),comment=_useState2[0],setComment=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),submitting=_useState4[0],setSubmitting=_useState4[1];var handlePostComment=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:e.preventDefault();_context.prev=1;setSubmitting(true);_context.next=5;return dispatch(addComment(postId,comment));case 5:setSubmitting(false);setComment('');dispatch(notify(\"Comment submitted!\",'success'));_context.next=14;break;case 10:_context.prev=10;_context.t0=_context[\"catch\"](1);setSubmitting(false);dispatch(notify(getErrorMsg(_context.t0),'error'));case 14:case\"end\":return _context.stop();}}},_callee,null,[[1,10]]);}));return function handlePostComment(_x){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(\"div\",{className:classes.wrapper,children:[user?/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",children:[\"Comment as\",' ',/*#__PURE__*/_jsx(Link,{component:RouterLink,to:\"/u/\".concat(user.username),children:user.username})]}):/*#__PURE__*/_jsx(Typography,{variant:\"body1\",children:\"Log in or sign up to leave a comment\"}),/*#__PURE__*/_jsxs(\"form\",{className:classes.form,onSubmit:handlePostComment,children:[/*#__PURE__*/_jsx(TextField,{placeholder:\"What are your thoughts?\",multiline:true,fullWidth:true,required:true,rows:4,rowsMax:Infinity,value:comment,onChange:function onChange(e){return setComment(e.target.value);},variant:\"outlined\",size:isMobile?'small':'medium'}),/*#__PURE__*/_jsx(Button,{type:\"submit\",color:\"primary\",variant:\"contained\",className:classes.commentBtn,startIcon:/*#__PURE__*/_jsx(SendIcon,{}),size:isMobile?'small':'medium',disabled:!user||submitting,children:!user?'Login to comment':submitting?'Commenting':'Comment'})]})]});};export default CommentInput;","map":{"version":3,"sources":["/home/thaddydore/Desktop/reddish-clone/client/src/components/CommentInput.js"],"names":["React","useState","Link","RouterLink","useDispatch","addComment","notify","getErrorMsg","Typography","TextField","Button","useCommentInputStyles","SendIcon","CommentInput","user","postId","isMobile","classes","dispatch","comment","setComment","submitting","setSubmitting","handlePostComment","e","preventDefault","wrapper","username","form","Infinity","target","value","commentBtn"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { addComment } from '../reducers/postCommentsReducer';\nimport { notify } from '../reducers/notificationReducer';\nimport getErrorMsg from '../utils/getErrorMsg';\n\nimport { Link, Typography, TextField, Button } from '@material-ui/core';\nimport { useCommentInputStyles } from '../styles/muiStyles';\nimport SendIcon from '@material-ui/icons/Send';\n\nconst CommentInput = ({ user, postId, isMobile }) => {\n  const classes = useCommentInputStyles();\n  const dispatch = useDispatch();\n  const [comment, setComment] = useState('');\n  const [submitting, setSubmitting] = useState(false);\n\n  const handlePostComment = async (e) => {\n    e.preventDefault();\n    try {\n      setSubmitting(true);\n      await dispatch(addComment(postId, comment));\n      setSubmitting(false);\n      setComment('');\n      dispatch(notify(`Comment submitted!`, 'success'));\n    } catch (err) {\n      setSubmitting(false);\n      dispatch(notify(getErrorMsg(err), 'error'));\n    }\n  };\n\n  return (\n    <div className={classes.wrapper}>\n      {user ? (\n        <Typography variant=\"body2\">\n          Comment as{' '}\n          <Link component={RouterLink} to={`/u/${user.username}`}>\n            {user.username}\n          </Link>\n        </Typography>\n      ) : (\n        <Typography variant=\"body1\">\n          Log in or sign up to leave a comment\n        </Typography>\n      )}\n      <form className={classes.form} onSubmit={handlePostComment}>\n        <TextField\n          placeholder={`What are your thoughts?`}\n          multiline\n          fullWidth\n          required\n          rows={4}\n          rowsMax={Infinity}\n          value={comment}\n          onChange={(e) => setComment(e.target.value)}\n          variant=\"outlined\"\n          size={isMobile ? 'small' : 'medium'}\n        />\n        <Button\n          type=\"submit\"\n          color=\"primary\"\n          variant=\"contained\"\n          className={classes.commentBtn}\n          startIcon={<SendIcon />}\n          size={isMobile ? 'small' : 'medium'}\n          disabled={!user || submitting}\n        >\n          {!user ? 'Login to comment' : submitting ? 'Commenting' : 'Comment'}\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nexport default CommentInput;\n"]},"metadata":{},"sourceType":"module"}