{"ast":null,"code":"import _slicedToArray from\"/home/thaddydore/Desktop/reddish-clone/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{useDispatch,useSelector}from'react-redux';import{Link as RouterLink}from'react-router-dom';import{logoutUser}from'../reducers/userReducer';import{notify}from'../reducers/notificationReducer';import MobileUserMenu from'./MobileUserMenu';import DesktopUserMenu from'./DesktopUserMenu';import SearchBar from'./SearchBar';import{AppBar,Toolbar,Typography,Link,Button,useMediaQuery,IconButton}from'@material-ui/core';import{useNavStyles}from'../styles/muiStyles';import{useTheme}from'@material-ui/core/styles';import RedditIcon from'@material-ui/icons/Reddit';import FavoriteIcon from'@material-ui/icons/Favorite';import SearchIcon from'@material-ui/icons/Search';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var NavBar=function NavBar(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),searchOpen=_useState2[0],setSearchOpen=_useState2[1];var user=useSelector(function(state){return state.user;});var dispatch=useDispatch();var theme=useTheme();var isMobile=useMediaQuery(theme.breakpoints.down('xs'));var classes=useNavStyles();var handleLogout=function handleLogout(){dispatch(logoutUser());dispatch(notify(\"u/\".concat(user.username,\" logged out\"),'success'));};return/*#__PURE__*/_jsx(AppBar,{position:\"sticky\",color:\"inherit\",elevation:1,children:/*#__PURE__*/_jsxs(Toolbar,{disableGutters:isMobile,children:[!searchOpen&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:classes.leftPortion,children:[/*#__PURE__*/_jsxs(\"div\",{className:classes.logoWrapper,children:[/*#__PURE__*/_jsx(Button,{className:classes.logo,color:\"primary\",component:RouterLink,to:\"/\",startIcon:/*#__PURE__*/_jsx(RedditIcon,{fontSize:\"large\"}),size:\"large\",children:\"reddish\"}),/*#__PURE__*/_jsxs(Typography,{variant:\"caption\",color:\"secondary\",children:[\"Made with \",/*#__PURE__*/_jsx(FavoriteIcon,{style:{fontSize:12}}),\" by\",/*#__PURE__*/_jsx(Link,{href:'https://github.com/Nwaforaugustine321',color:\"inherit\",target:\"_blank\",rel:\"noopener\",children:/*#__PURE__*/_jsx(\"strong\",{children:\" austine\"})})]})]}),!isMobile&&/*#__PURE__*/_jsx(SearchBar,{})]}),isMobile?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(IconButton,{color:\"primary\",className:classes.searchBtn,onClick:function onClick(){return setSearchOpen(function(prevState){return!prevState;});},children:/*#__PURE__*/_jsx(SearchIcon,{})}),/*#__PURE__*/_jsx(MobileUserMenu,{user:user,handleLogout:handleLogout})]}):/*#__PURE__*/_jsx(DesktopUserMenu,{user:user,handleLogout:handleLogout})]}),searchOpen&&isMobile&&/*#__PURE__*/_jsx(SearchBar,{isMobile:true,setSearchOpen:setSearchOpen})]})});};export default NavBar;","map":{"version":3,"sources":["/home/thaddydore/Desktop/reddish-clone/client/src/components/NavBar.js"],"names":["React","useState","useDispatch","useSelector","Link","RouterLink","logoutUser","notify","MobileUserMenu","DesktopUserMenu","SearchBar","AppBar","Toolbar","Typography","Button","useMediaQuery","IconButton","useNavStyles","useTheme","RedditIcon","FavoriteIcon","SearchIcon","NavBar","searchOpen","setSearchOpen","user","state","dispatch","theme","isMobile","breakpoints","down","classes","handleLogout","username","leftPortion","logoWrapper","logo","fontSize","searchBtn","prevState"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { logoutUser } from '../reducers/userReducer';\nimport { notify } from '../reducers/notificationReducer';\nimport MobileUserMenu from './MobileUserMenu';\nimport DesktopUserMenu from './DesktopUserMenu';\nimport SearchBar from './SearchBar';\n\nimport { AppBar, Toolbar, Typography, Link, Button, useMediaQuery, IconButton } from '@material-ui/core';\nimport { useNavStyles } from '../styles/muiStyles';\nimport { useTheme } from '@material-ui/core/styles';\nimport RedditIcon from '@material-ui/icons/Reddit';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst NavBar = () => {\n\tconst [searchOpen, setSearchOpen] = useState(false);\n\tconst user = useSelector((state) => state.user);\n\tconst dispatch = useDispatch();\n\tconst theme = useTheme();\n\tconst isMobile = useMediaQuery(theme.breakpoints.down('xs'));\n\tconst classes = useNavStyles();\n\n\tconst handleLogout = () => {\n\t\tdispatch(logoutUser());\n\t\tdispatch(notify(`u/${user.username} logged out`, 'success'));\n\t};\n\n\treturn (\n\t\t<AppBar position='sticky' color='inherit' elevation={1}>\n\t\t\t<Toolbar disableGutters={isMobile}>\n\t\t\t\t{!searchOpen && (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<div className={classes.leftPortion}>\n\t\t\t\t\t\t\t<div className={classes.logoWrapper}>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tclassName={classes.logo}\n\t\t\t\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\t\t\t\tcomponent={RouterLink}\n\t\t\t\t\t\t\t\t\tto='/'\n\t\t\t\t\t\t\t\t\tstartIcon={<RedditIcon fontSize='large' />}\n\t\t\t\t\t\t\t\t\tsize='large'>\n\t\t\t\t\t\t\t\t\treddish\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t<Typography variant='caption' color='secondary'>\n\t\t\t\t\t\t\t\t\tMade with <FavoriteIcon style={{ fontSize: 12 }} /> by\n\t\t\t\t\t\t\t\t\t<Link href={'https://github.com/Nwaforaugustine321'} color='inherit' target='_blank' rel='noopener'>\n\t\t\t\t\t\t\t\t\t\t<strong>{` austine`}</strong>\n\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{!isMobile && <SearchBar />}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{isMobile ? (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<IconButton color='primary' className={classes.searchBtn} onClick={() => setSearchOpen((prevState) => !prevState)}>\n\t\t\t\t\t\t\t\t\t<SearchIcon />\n\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t<MobileUserMenu user={user} handleLogout={handleLogout} />\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<DesktopUserMenu user={user} handleLogout={handleLogout} />\n\t\t\t\t\t\t)}\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t\t{searchOpen && isMobile && <SearchBar isMobile={true} setSearchOpen={setSearchOpen} />}\n\t\t\t</Toolbar>\n\t\t</AppBar>\n\t);\n};\n\nexport default NavBar;\n"]},"metadata":{},"sourceType":"module"}