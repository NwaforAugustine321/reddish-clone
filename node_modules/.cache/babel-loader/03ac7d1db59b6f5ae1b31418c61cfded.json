{"ast":null,"code":"import _slicedToArray from\"/home/thaddydore/Desktop/reddish-clone/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{useDispatch}from'react-redux';import{sortComments}from'../reducers/postCommentsReducer';import{Select,MenuItem,Typography}from'@material-ui/core';import{useSortCommentsStyles}from'../styles/muiStyles';import SortIcon from'@material-ui/icons/Sort';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var SortCommentsMenu=function SortCommentsMenu(){var classes=useSortCommentsStyles();var dispatch=useDispatch();var _useState=useState('old'),_useState2=_slicedToArray(_useState,2),sortBy=_useState2[0],setSortBy=_useState2[1];var handleSortComments=function handleSortComments(value){setSortBy(value);dispatch(sortComments(value));};return/*#__PURE__*/_jsxs(\"div\",{className:classes.root,children:[/*#__PURE__*/_jsxs(Typography,{variant:\"button\",className:classes.label,children:[/*#__PURE__*/_jsx(SortIcon,{style:{marginRight:'8px'},color:\"primary\"}),\"Sort By\"]}),/*#__PURE__*/_jsx(\"form\",{children:/*#__PURE__*/_jsxs(Select,{value:sortBy,children:[/*#__PURE__*/_jsx(MenuItem,{value:\"old\",onClick:function onClick(){return handleSortComments('old');},children:\"Old\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"new\",onClick:function onClick(){return handleSortComments('new');},children:\"New\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"upvoted\",onClick:function onClick(){return handleSortComments('upvoted');},children:\"Most Upvoted\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"downvoted\",onClick:function onClick(){return handleSortComments('downvoted');},children:\"Most Downvoted\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"replied\",onClick:function onClick(){return handleSortComments('replied');},children:\"Most Replied\"})]})})]});};export default SortCommentsMenu;","map":{"version":3,"sources":["/home/thaddydore/Desktop/reddish-clone/client/src/components/SortCommentsMenu.js"],"names":["React","useState","useDispatch","sortComments","Select","MenuItem","Typography","useSortCommentsStyles","SortIcon","SortCommentsMenu","classes","dispatch","sortBy","setSortBy","handleSortComments","value","root","label","marginRight"],"mappings":"oKAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,OAASC,YAAT,KAA6B,iCAA7B,CAEA,OAASC,MAAT,CAAiBC,QAAjB,CAA2BC,UAA3B,KAA6C,mBAA7C,CACA,OAASC,qBAAT,KAAsC,qBAAtC,CACA,MAAOC,CAAAA,QAAP,KAAqB,yBAArB,C,wFAEA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,EAAM,CAC7B,GAAMC,CAAAA,OAAO,CAAGH,qBAAqB,EAArC,CACA,GAAMI,CAAAA,QAAQ,CAAGT,WAAW,EAA5B,CACA,cAA4BD,QAAQ,CAAC,KAAD,CAApC,wCAAOW,MAAP,eAAeC,SAAf,eAEA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,KAAD,CAAW,CACpCF,SAAS,CAACE,KAAD,CAAT,CACAJ,QAAQ,CAACR,YAAY,CAACY,KAAD,CAAb,CAAR,CACD,CAHD,CAKA,mBACE,aAAK,SAAS,CAAEL,OAAO,CAACM,IAAxB,wBACE,MAAC,UAAD,EAAY,OAAO,CAAC,QAApB,CAA6B,SAAS,CAAEN,OAAO,CAACO,KAAhD,wBACE,KAAC,QAAD,EAAU,KAAK,CAAE,CAAEC,WAAW,CAAE,KAAf,CAAjB,CAAyC,KAAK,CAAC,SAA/C,EADF,aADF,cAKE,mCACE,MAAC,MAAD,EAAQ,KAAK,CAAEN,MAAf,wBACE,KAAC,QAAD,EAAU,KAAK,CAAC,KAAhB,CAAsB,OAAO,CAAE,yBAAME,CAAAA,kBAAkB,CAAC,KAAD,CAAxB,EAA/B,iBADF,cAIE,KAAC,QAAD,EAAU,KAAK,CAAC,KAAhB,CAAsB,OAAO,CAAE,yBAAMA,CAAAA,kBAAkB,CAAC,KAAD,CAAxB,EAA/B,iBAJF,cAOE,KAAC,QAAD,EACE,KAAK,CAAC,SADR,CAEE,OAAO,CAAE,yBAAMA,CAAAA,kBAAkB,CAAC,SAAD,CAAxB,EAFX,0BAPF,cAaE,KAAC,QAAD,EACE,KAAK,CAAC,WADR,CAEE,OAAO,CAAE,yBAAMA,CAAAA,kBAAkB,CAAC,WAAD,CAAxB,EAFX,4BAbF,cAmBE,KAAC,QAAD,EACE,KAAK,CAAC,SADR,CAEE,OAAO,CAAE,yBAAMA,CAAAA,kBAAkB,CAAC,SAAD,CAAxB,EAFX,0BAnBF,GADF,EALF,GADF,CAoCD,CA9CD,CAgDA,cAAeL,CAAAA,gBAAf","sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { sortComments } from '../reducers/postCommentsReducer';\n\nimport { Select, MenuItem, Typography } from '@material-ui/core';\nimport { useSortCommentsStyles } from '../styles/muiStyles';\nimport SortIcon from '@material-ui/icons/Sort';\n\nconst SortCommentsMenu = () => {\n  const classes = useSortCommentsStyles();\n  const dispatch = useDispatch();\n  const [sortBy, setSortBy] = useState('old');\n\n  const handleSortComments = (value) => {\n    setSortBy(value);\n    dispatch(sortComments(value));\n  };\n\n  return (\n    <div className={classes.root}>\n      <Typography variant=\"button\" className={classes.label}>\n        <SortIcon style={{ marginRight: '8px' }} color=\"primary\" />\n        Sort By\n      </Typography>\n      <form>\n        <Select value={sortBy}>\n          <MenuItem value=\"old\" onClick={() => handleSortComments('old')}>\n            Old\n          </MenuItem>\n          <MenuItem value=\"new\" onClick={() => handleSortComments('new')}>\n            New\n          </MenuItem>\n          <MenuItem\n            value=\"upvoted\"\n            onClick={() => handleSortComments('upvoted')}\n          >\n            Most Upvoted\n          </MenuItem>\n          <MenuItem\n            value=\"downvoted\"\n            onClick={() => handleSortComments('downvoted')}\n          >\n            Most Downvoted\n          </MenuItem>\n          <MenuItem\n            value=\"replied\"\n            onClick={() => handleSortComments('replied')}\n          >\n            Most Replied\n          </MenuItem>\n        </Select>\n      </form>\n    </div>\n  );\n};\n\nexport default SortCommentsMenu;\n"]},"metadata":{},"sourceType":"module"}