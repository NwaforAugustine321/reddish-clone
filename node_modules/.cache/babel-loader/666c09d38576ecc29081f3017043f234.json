{"ast":null,"code":"import storageService from'../utils/localStorage';var themeReducer=function themeReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case'TOGGLE_DARK_MODE':return!state;default:return state;}};export var toggleDarkMode=function toggleDarkMode(isDarkMode){return function(dispatch){storageService.saveDarkMode(isDarkMode);dispatch({type:'TOGGLE_DARK_MODE'});};};export var setDarkMode=function setDarkMode(){return function(dispatch){var isDarkMode=storageService.loadDarkMode();if(isDarkMode==='true'){dispatch({type:'TOGGLE_DARK_MODE'});}};};export default themeReducer;","map":{"version":3,"sources":["/home/thaddydore/Desktop/reddish-clone/client/src/reducers/themeReducer.js"],"names":["storageService","themeReducer","state","action","type","toggleDarkMode","isDarkMode","dispatch","saveDarkMode","setDarkMode","loadDarkMode"],"mappings":"AAAA,MAAOA,CAAAA,cAAP,KAA2B,uBAA3B,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAA2B,IAA1BC,CAAAA,KAA0B,2DAAlB,KAAkB,IAAXC,CAAAA,MAAW,2CAC9C,OAAQA,MAAM,CAACC,IAAf,EACE,IAAK,kBAAL,CACE,MAAO,CAACF,KAAR,CACF,QACE,MAAOA,CAAAA,KAAP,CAJJ,CAMD,CAPD,CASA,MAAO,IAAMG,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,UAAD,CAAgB,CAC5C,MAAO,UAACC,QAAD,CAAc,CACnBP,cAAc,CAACQ,YAAf,CAA4BF,UAA5B,EAEAC,QAAQ,CAAC,CAAEH,IAAI,CAAE,kBAAR,CAAD,CAAR,CACD,CAJD,CAKD,CANM,CAQP,MAAO,IAAMK,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CAC/B,MAAO,UAACF,QAAD,CAAc,CACnB,GAAMD,CAAAA,UAAU,CAAGN,cAAc,CAACU,YAAf,EAAnB,CAEA,GAAIJ,UAAU,GAAK,MAAnB,CAA2B,CACzBC,QAAQ,CAAC,CAAEH,IAAI,CAAE,kBAAR,CAAD,CAAR,CACD,CACF,CAND,CAOD,CARM,CAUP,cAAeH,CAAAA,YAAf","sourcesContent":["import storageService from '../utils/localStorage';\n\nconst themeReducer = (state = false, action) => {\n  switch (action.type) {\n    case 'TOGGLE_DARK_MODE':\n      return !state;\n    default:\n      return state;\n  }\n};\n\nexport const toggleDarkMode = (isDarkMode) => {\n  return (dispatch) => {\n    storageService.saveDarkMode(isDarkMode);\n\n    dispatch({ type: 'TOGGLE_DARK_MODE' });\n  };\n};\n\nexport const setDarkMode = () => {\n  return (dispatch) => {\n    const isDarkMode = storageService.loadDarkMode();\n\n    if (isDarkMode === 'true') {\n      dispatch({ type: 'TOGGLE_DARK_MODE' });\n    }\n  };\n};\n\nexport default themeReducer;\n"]},"metadata":{},"sourceType":"module"}