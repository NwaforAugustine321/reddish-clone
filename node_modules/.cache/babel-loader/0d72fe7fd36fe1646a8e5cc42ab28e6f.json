{"ast":null,"code":"import _regeneratorRuntime from\"/home/thaddydore/Desktop/reddish-clone/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/thaddydore/Desktop/reddish-clone/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _toConsumableArray from\"/home/thaddydore/Desktop/reddish-clone/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/home/thaddydore/Desktop/reddish-clone/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import subService from'../services/subs';import postService from'../services/posts';var subPageReducer=function subPageReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case'FETCH_SUB':return action.payload;case'LOAD_SUB_POSTS':return _objectSpread(_objectSpread({},state),{},{posts:_objectSpread(_objectSpread({},action.payload.posts),{},{results:[].concat(_toConsumableArray(state.posts.results),_toConsumableArray(action.payload.posts.results))})});case'TOGGLE_SUBPAGE_VOTE':return _objectSpread(_objectSpread({},state),{},{posts:_objectSpread(_objectSpread({},state.posts),{},{results:state.posts.results.map(function(p){return p.id!==action.payload.id?p:_objectSpread(_objectSpread({},p),action.payload.data);})})});case'SUBSCRIBE_SUB':return _objectSpread(_objectSpread({},state),{},{subDetails:_objectSpread(_objectSpread({},state.subDetails),action.payload)});case'EDIT_DESCRIPTION':return _objectSpread(_objectSpread({},state),{},{subDetails:_objectSpread(_objectSpread({},state.subDetails),{},{description:action.payload})});default:return state;}};export var fetchSub=function fetchSub(subredditName,sortBy){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var sub;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return subService.getSubreddit(subredditName,sortBy,10,1);case 2:sub=_context.sent;dispatch({type:'FETCH_SUB',payload:sub});case 4:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();};export var loadSubPosts=function loadSubPosts(subredditName,sortBy,page){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var sub;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return subService.getSubreddit(subredditName,sortBy,10,page);case 2:sub=_context2.sent;dispatch({type:'LOAD_SUB_POSTS',payload:sub});case 4:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}();};export var toggleUpvote=function toggleUpvote(id,upvotedBy,downvotedBy){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch){var pointsCount;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:pointsCount=upvotedBy.length-downvotedBy.length;if(pointsCount<0){pointsCount=0;}dispatch({type:'TOGGLE_SUBPAGE_VOTE',payload:{id:id,data:{upvotedBy:upvotedBy,pointsCount:pointsCount,downvotedBy:downvotedBy}}});_context3.next=5;return postService.upvotePost(id);case 5:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x3){return _ref3.apply(this,arguments);};}();};export var toggleDownvote=function toggleDownvote(id,downvotedBy,upvotedBy){return/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch){var pointsCount;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:pointsCount=upvotedBy.length-downvotedBy.length;if(pointsCount<0){pointsCount=0;}dispatch({type:'TOGGLE_SUBPAGE_VOTE',payload:{id:id,data:{upvotedBy:upvotedBy,pointsCount:pointsCount,downvotedBy:downvotedBy}}});_context4.next=5;return postService.downvotePost(id);case 5:case\"end\":return _context4.stop();}}},_callee4);}));return function(_x4){return _ref4.apply(this,arguments);};}();};export var toggleSubscribe=function toggleSubscribe(id,subscribedBy){return/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(dispatch){var subscriberCount;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:subscriberCount=subscribedBy.length;dispatch({type:'SUBSCRIBE_SUB',payload:{subscribedBy:subscribedBy,subscriberCount:subscriberCount}});_context5.next=4;return subService.subscribeSub(id);case 4:case\"end\":return _context5.stop();}}},_callee5);}));return function(_x5){return _ref5.apply(this,arguments);};}();};export var editDescription=function editDescription(id,description){return/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(dispatch){return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:_context6.next=2;return subService.updateDescription(id,{description:description});case 2:dispatch({type:'EDIT_DESCRIPTION',payload:description});case 3:case\"end\":return _context6.stop();}}},_callee6);}));return function(_x6){return _ref6.apply(this,arguments);};}();};export default subPageReducer;","map":{"version":3,"sources":["/home/thaddydore/Desktop/reddish-clone/client/src/reducers/subPageReducer.js"],"names":["subService","postService","subPageReducer","state","action","type","payload","posts","results","map","p","id","data","subDetails","description","fetchSub","subredditName","sortBy","dispatch","getSubreddit","sub","loadSubPosts","page","toggleUpvote","upvotedBy","downvotedBy","pointsCount","length","upvotePost","toggleDownvote","downvotePost","toggleSubscribe","subscribedBy","subscriberCount","subscribeSub","editDescription","updateDescription"],"mappings":"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","sourcesContent":["import subService from '../services/subs';\nimport postService from '../services/posts';\n\nconst subPageReducer = (state = null, action) => {\n  switch (action.type) {\n    case 'FETCH_SUB':\n      return action.payload;\n    case 'LOAD_SUB_POSTS':\n      return {\n        ...state,\n        posts: {\n          ...action.payload.posts,\n          results: [...state.posts.results, ...action.payload.posts.results],\n        },\n      };\n    case 'TOGGLE_SUBPAGE_VOTE':\n      return {\n        ...state,\n        posts: {\n          ...state.posts,\n          results: state.posts.results.map((p) =>\n            p.id !== action.payload.id ? p : { ...p, ...action.payload.data }\n          ),\n        },\n      };\n    case 'SUBSCRIBE_SUB':\n      return {\n        ...state,\n        subDetails: { ...state.subDetails, ...action.payload },\n      };\n    case 'EDIT_DESCRIPTION':\n      return {\n        ...state,\n        subDetails: { ...state.subDetails, description: action.payload },\n      };\n    default:\n      return state;\n  }\n};\n\nexport const fetchSub = (subredditName, sortBy) => {\n  return async (dispatch) => {\n    const sub = await subService.getSubreddit(subredditName, sortBy, 10, 1);\n\n    dispatch({\n      type: 'FETCH_SUB',\n      payload: sub,\n    });\n  };\n};\n\nexport const loadSubPosts = (subredditName, sortBy, page) => {\n  return async (dispatch) => {\n    const sub = await subService.getSubreddit(subredditName, sortBy, 10, page);\n\n    dispatch({\n      type: 'LOAD_SUB_POSTS',\n      payload: sub,\n    });\n  };\n};\n\nexport const toggleUpvote = (id, upvotedBy, downvotedBy) => {\n  return async (dispatch) => {\n    let pointsCount = upvotedBy.length - downvotedBy.length;\n    if (pointsCount < 0) {\n      pointsCount = 0;\n    }\n\n    dispatch({\n      type: 'TOGGLE_SUBPAGE_VOTE',\n      payload: { id, data: { upvotedBy, pointsCount, downvotedBy } },\n    });\n\n    await postService.upvotePost(id);\n  };\n};\n\nexport const toggleDownvote = (id, downvotedBy, upvotedBy) => {\n  return async (dispatch) => {\n    let pointsCount = upvotedBy.length - downvotedBy.length;\n    if (pointsCount < 0) {\n      pointsCount = 0;\n    }\n\n    dispatch({\n      type: 'TOGGLE_SUBPAGE_VOTE',\n      payload: { id, data: { upvotedBy, pointsCount, downvotedBy } },\n    });\n\n    await postService.downvotePost(id);\n  };\n};\n\nexport const toggleSubscribe = (id, subscribedBy) => {\n  return async (dispatch) => {\n    const subscriberCount = subscribedBy.length;\n\n    dispatch({\n      type: 'SUBSCRIBE_SUB',\n      payload: { subscribedBy, subscriberCount },\n    });\n\n    await subService.subscribeSub(id);\n  };\n};\n\nexport const editDescription = (id, description) => {\n  return async (dispatch) => {\n    await subService.updateDescription(id, { description });\n\n    dispatch({\n      type: 'EDIT_DESCRIPTION',\n      payload: description,\n    });\n  };\n};\n\nexport default subPageReducer;\n"]},"metadata":{},"sourceType":"module"}