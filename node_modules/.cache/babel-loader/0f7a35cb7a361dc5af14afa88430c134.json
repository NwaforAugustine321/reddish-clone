{"ast":null,"code":"import _regeneratorRuntime from\"/home/thaddydore/Desktop/reddish-clone/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _toConsumableArray from\"/home/thaddydore/Desktop/reddish-clone/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _asyncToGenerator from\"/home/thaddydore/Desktop/reddish-clone/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import React from'react';import{useSelector,useDispatch}from'react-redux';import{Link as RouterLink}from'react-router-dom';import{UpvoteButton,DownvoteButton}from'./VoteButtons';import{notify}from'../reducers/notificationReducer';import EditDeleteMenu from'./EditDeleteMenu';import getEditedThumbail from'../utils/cloudinaryTransform';import{trimLink,prettifyLink,fixUrl}from'../utils/formatUrl';import TimeAgo from'timeago-react';import getErrorMsg from'../utils/getErrorMsg';import{Paper,Typography,useMediaQuery,CardMedia,Link,Button}from'@material-ui/core';import{useCardStyles}from'../styles/muiStyles';import{useTheme}from'@material-ui/core/styles';import MessageIcon from'@material-ui/icons/Message';import LinkIcon from'@material-ui/icons/Link';import OpenInNewIcon from'@material-ui/icons/OpenInNew';import CommentIcon from'@material-ui/icons/Comment';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var PostCard=function PostCard(_ref){var post=_ref.post,toggleUpvote=_ref.toggleUpvote,toggleDownvote=_ref.toggleDownvote;var id=post.id,title=post.title,postType=post.postType,textSubmission=post.textSubmission,linkSubmission=post.linkSubmission,imageSubmission=post.imageSubmission,subreddit=post.subreddit,author=post.author,upvotedBy=post.upvotedBy,downvotedBy=post.downvotedBy,pointsCount=post.pointsCount,commentCount=post.commentCount,createdAt=post.createdAt,updatedAt=post.updatedAt;var classes=useCardStyles();var theme=useTheme();var isMobile=useMediaQuery(theme.breakpoints.down('xs'));var dispatch=useDispatch();var _useSelector=useSelector(function(state){return state;}),user=_useSelector.user,darkMode=_useSelector.darkMode;var isUpvoted=user&&upvotedBy.includes(user.id);var isDownvoted=user&&downvotedBy.includes(user.id);var handleUpvoteToggle=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var updatedUpvotedBy,_updatedUpvotedBy,updatedDownvotedBy;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:try{if(isUpvoted){updatedUpvotedBy=upvotedBy.filter(function(u){return u!==user.id;});dispatch(toggleUpvote(id,updatedUpvotedBy,downvotedBy));}else{_updatedUpvotedBy=[].concat(_toConsumableArray(upvotedBy),[user.id]);updatedDownvotedBy=downvotedBy.filter(function(d){return d!==user.id;});dispatch(toggleUpvote(id,_updatedUpvotedBy,updatedDownvotedBy));}}catch(err){dispatch(notify(getErrorMsg(err),'error'));}case 1:case\"end\":return _context.stop();}}},_callee);}));return function handleUpvoteToggle(){return _ref2.apply(this,arguments);};}();var handleDownvoteToggle=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var updatedDownvotedBy,_updatedDownvotedBy,updatedUpvotedBy;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:try{if(isDownvoted){updatedDownvotedBy=downvotedBy.filter(function(d){return d!==user.id;});dispatch(toggleDownvote(id,updatedDownvotedBy,upvotedBy));}else{_updatedDownvotedBy=[].concat(_toConsumableArray(downvotedBy),[user.id]);updatedUpvotedBy=upvotedBy.filter(function(u){return u!==user.id;});dispatch(toggleDownvote(id,_updatedDownvotedBy,updatedUpvotedBy));}}catch(err){dispatch(notify(getErrorMsg(err),'error'));}case 1:case\"end\":return _context2.stop();}}},_callee2);}));return function handleDownvoteToggle(){return _ref3.apply(this,arguments);};}();var linkToShow=postType==='Link'?linkSubmission:postType==='Image'?imageSubmission.imageLink:'';var formattedLink=trimLink(prettifyLink(linkToShow),30);return/*#__PURE__*/_jsxs(Paper,{className:classes.root,variant:\"outlined\",children:[/*#__PURE__*/_jsxs(\"div\",{className:classes.votesWrapper,children:[/*#__PURE__*/_jsx(UpvoteButton,{user:user,body:post,handleUpvote:handleUpvoteToggle,size:isMobile?'small':'medium'}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",style:{color:isUpvoted?'#FF8b60':isDownvoted?'#9494FF':darkMode?'#e4e4e4':'#333',fontWeight:600},children:pointsCount}),/*#__PURE__*/_jsx(DownvoteButton,{user:user,body:post,handleDownvote:handleDownvoteToggle,size:isMobile?'small':'medium'})]}),/*#__PURE__*/_jsx(\"div\",{className:classes.thumbnailWrapper,children:postType==='Text'?/*#__PURE__*/_jsx(RouterLink,{to:\"/comments/\".concat(id),children:/*#__PURE__*/_jsx(Paper,{elevation:0,square:true,className:classes.thumbnail,children:/*#__PURE__*/_jsx(MessageIcon,{fontSize:\"inherit\",className:classes.thumbnailIcon,style:{color:'#787878'}})})}):postType==='Link'?/*#__PURE__*/_jsx(\"a\",{href:fixUrl(linkSubmission),target:\"_noblank\",children:/*#__PURE__*/_jsx(Paper,{elevation:0,square:true,className:classes.thumbnail,children:/*#__PURE__*/_jsx(LinkIcon,{fontSize:\"inherit\",className:classes.thumbnailIcon,style:{color:'#787878'}})})}):/*#__PURE__*/_jsx(Paper,{elevation:0,square:true,className:classes.thumbnail,children:/*#__PURE__*/_jsx(CardMedia,{className:classes.thumbnail,image:getEditedThumbail(imageSubmission.imageLink),title:title,component:\"a\",href:imageSubmission.imageLink,target:\"_noblank\"})})}),/*#__PURE__*/_jsxs(\"div\",{className:classes.postInfoWrapper,children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",className:classes.title,children:[title,' ',/*#__PURE__*/_jsx(Typography,{variant:\"caption\",color:\"primary\",className:classes.url,children:/*#__PURE__*/_jsxs(Link,{href:postType==='Link'?fixUrl(linkSubmission):postType==='Image'?imageSubmission.imageLink:'',children:[formattedLink,postType==='Text'?null:/*#__PURE__*/_jsx(OpenInNewIcon,{fontSize:\"inherit\"})]})})]}),/*#__PURE__*/_jsxs(Typography,{variant:\"subtitle2\",children:[/*#__PURE__*/_jsxs(Link,{component:RouterLink,to:\"/r/\".concat(subreddit.subredditName),children:[\"r/\",subreddit.subredditName]}),/*#__PURE__*/_jsxs(Typography,{variant:\"caption\",className:classes.userAndDate,children:[\"Posted by\",' ',/*#__PURE__*/_jsxs(Link,{component:RouterLink,to:\"/u/\".concat(author.username),children:[\"u/\",author.username]}),' ',\"\\u2022 \",/*#__PURE__*/_jsx(TimeAgo,{datetime:new Date(createdAt)}),createdAt!==updatedAt&&'*']})]}),/*#__PURE__*/_jsxs(\"div\",{className:classes.bottomBtns,children:[/*#__PURE__*/_jsxs(Button,{startIcon:/*#__PURE__*/_jsx(CommentIcon,{}),className:classes.commentsBtn,component:RouterLink,to:\"/comments/\".concat(id),size:isMobile?'small':'medium',children:[commentCount,\" comments\"]}),user&&user.id===author.id&&/*#__PURE__*/_jsx(EditDeleteMenu,{id:id,isMobile:isMobile,title:title,postType:postType,subreddit:subreddit,textSubmission:textSubmission,linkSubmission:linkSubmission})]})]})]});};export default PostCard;","map":{"version":3,"sources":["/home/thaddydore/Desktop/reddish-clone/client/src/components/PostCard.js"],"names":["React","useSelector","useDispatch","Link","RouterLink","UpvoteButton","DownvoteButton","notify","EditDeleteMenu","getEditedThumbail","trimLink","prettifyLink","fixUrl","TimeAgo","getErrorMsg","Paper","Typography","useMediaQuery","CardMedia","Button","useCardStyles","useTheme","MessageIcon","LinkIcon","OpenInNewIcon","CommentIcon","PostCard","post","toggleUpvote","toggleDownvote","id","title","postType","textSubmission","linkSubmission","imageSubmission","subreddit","author","upvotedBy","downvotedBy","pointsCount","commentCount","createdAt","updatedAt","classes","theme","isMobile","breakpoints","down","dispatch","state","user","darkMode","isUpvoted","includes","isDownvoted","handleUpvoteToggle","updatedUpvotedBy","filter","u","updatedDownvotedBy","d","err","handleDownvoteToggle","linkToShow","imageLink","formattedLink","root","votesWrapper","color","fontWeight","thumbnailWrapper","thumbnail","thumbnailIcon","postInfoWrapper","url","subredditName","userAndDate","username","Date","bottomBtns","commentsBtn"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { UpvoteButton, DownvoteButton } from './VoteButtons';\nimport { notify } from '../reducers/notificationReducer';\nimport EditDeleteMenu from './EditDeleteMenu';\nimport getEditedThumbail from '../utils/cloudinaryTransform';\nimport { trimLink, prettifyLink, fixUrl } from '../utils/formatUrl';\nimport TimeAgo from 'timeago-react';\nimport getErrorMsg from '../utils/getErrorMsg';\n\nimport {\n  Paper,\n  Typography,\n  useMediaQuery,\n  CardMedia,\n  Link,\n  Button,\n} from '@material-ui/core';\nimport { useCardStyles } from '../styles/muiStyles';\nimport { useTheme } from '@material-ui/core/styles';\nimport MessageIcon from '@material-ui/icons/Message';\nimport LinkIcon from '@material-ui/icons/Link';\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\nimport CommentIcon from '@material-ui/icons/Comment';\n\nconst PostCard = ({ post, toggleUpvote, toggleDownvote }) => {\n  const {\n    id,\n    title,\n    postType,\n    textSubmission,\n    linkSubmission,\n    imageSubmission,\n    subreddit,\n    author,\n    upvotedBy,\n    downvotedBy,\n    pointsCount,\n    commentCount,\n    createdAt,\n    updatedAt,\n  } = post;\n\n  const classes = useCardStyles();\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('xs'));\n  const dispatch = useDispatch();\n  const { user, darkMode } = useSelector((state) => state);\n\n  const isUpvoted = user && upvotedBy.includes(user.id);\n  const isDownvoted = user && downvotedBy.includes(user.id);\n\n  const handleUpvoteToggle = async () => {\n    try {\n      if (isUpvoted) {\n        const updatedUpvotedBy = upvotedBy.filter((u) => u !== user.id);\n        dispatch(toggleUpvote(id, updatedUpvotedBy, downvotedBy));\n      } else {\n        const updatedUpvotedBy = [...upvotedBy, user.id];\n        const updatedDownvotedBy = downvotedBy.filter((d) => d !== user.id);\n        dispatch(toggleUpvote(id, updatedUpvotedBy, updatedDownvotedBy));\n      }\n    } catch (err) {\n      dispatch(notify(getErrorMsg(err), 'error'));\n    }\n  };\n\n  const handleDownvoteToggle = async () => {\n    try {\n      if (isDownvoted) {\n        const updatedDownvotedBy = downvotedBy.filter((d) => d !== user.id);\n        dispatch(toggleDownvote(id, updatedDownvotedBy, upvotedBy));\n      } else {\n        const updatedDownvotedBy = [...downvotedBy, user.id];\n        const updatedUpvotedBy = upvotedBy.filter((u) => u !== user.id);\n        dispatch(toggleDownvote(id, updatedDownvotedBy, updatedUpvotedBy));\n      }\n    } catch (err) {\n      dispatch(notify(getErrorMsg(err), 'error'));\n    }\n  };\n\n  const linkToShow =\n    postType === 'Link'\n      ? linkSubmission\n      : postType === 'Image'\n      ? imageSubmission.imageLink\n      : '';\n\n  const formattedLink = trimLink(prettifyLink(linkToShow), 30);\n\n  return (\n    <Paper className={classes.root} variant=\"outlined\">\n      <div className={classes.votesWrapper}>\n        <UpvoteButton\n          user={user}\n          body={post}\n          handleUpvote={handleUpvoteToggle}\n          size={isMobile ? 'small' : 'medium'}\n        />\n        <Typography\n          variant=\"body1\"\n          style={{\n            color: isUpvoted\n              ? '#FF8b60'\n              : isDownvoted\n              ? '#9494FF'\n              : darkMode\n              ? '#e4e4e4'\n              : '#333',\n            fontWeight: 600,\n          }}\n        >\n          {pointsCount}\n        </Typography>\n        <DownvoteButton\n          user={user}\n          body={post}\n          handleDownvote={handleDownvoteToggle}\n          size={isMobile ? 'small' : 'medium'}\n        />\n      </div>\n      <div className={classes.thumbnailWrapper}>\n        {postType === 'Text' ? (\n          <RouterLink to={`/comments/${id}`}>\n            <Paper elevation={0} square className={classes.thumbnail}>\n              <MessageIcon\n                fontSize=\"inherit\"\n                className={classes.thumbnailIcon}\n                style={{ color: '#787878' }}\n              />\n            </Paper>\n          </RouterLink>\n        ) : postType === 'Link' ? (\n          <a href={fixUrl(linkSubmission)} target=\"_noblank\">\n            <Paper elevation={0} square className={classes.thumbnail}>\n              <LinkIcon\n                fontSize=\"inherit\"\n                className={classes.thumbnailIcon}\n                style={{ color: '#787878' }}\n              />\n            </Paper>\n          </a>\n        ) : (\n          <Paper elevation={0} square className={classes.thumbnail}>\n            <CardMedia\n              className={classes.thumbnail}\n              image={getEditedThumbail(imageSubmission.imageLink)}\n              title={title}\n              component=\"a\"\n              href={imageSubmission.imageLink}\n              target=\"_noblank\"\n            />\n          </Paper>\n        )}\n      </div>\n      <div className={classes.postInfoWrapper}>\n        <Typography variant=\"h6\" className={classes.title}>\n          {title}{' '}\n          <Typography variant=\"caption\" color=\"primary\" className={classes.url}>\n            <Link\n              href={\n                postType === 'Link'\n                  ? fixUrl(linkSubmission)\n                  : postType === 'Image'\n                  ? imageSubmission.imageLink\n                  : ''\n              }\n            >\n              {formattedLink}\n              {postType === 'Text' ? null : (\n                <OpenInNewIcon fontSize=\"inherit\" />\n              )}\n            </Link>\n          </Typography>\n        </Typography>\n        <Typography variant=\"subtitle2\">\n          <Link component={RouterLink} to={`/r/${subreddit.subredditName}`}>\n            r/{subreddit.subredditName}\n          </Link>\n          <Typography variant=\"caption\" className={classes.userAndDate}>\n            Posted by{' '}\n            <Link component={RouterLink} to={`/u/${author.username}`}>\n              u/{author.username}\n            </Link>{' '}\n            • <TimeAgo datetime={new Date(createdAt)} />\n            {createdAt !== updatedAt && '*'}\n          </Typography>\n        </Typography>\n        <div className={classes.bottomBtns}>\n          <Button\n            startIcon={<CommentIcon />}\n            className={classes.commentsBtn}\n            component={RouterLink}\n            to={`/comments/${id}`}\n            size={isMobile ? 'small' : 'medium'}\n          >\n            {commentCount} comments\n          </Button>\n          {user && user.id === author.id && (\n            <EditDeleteMenu\n              id={id}\n              isMobile={isMobile}\n              title={title}\n              postType={postType}\n              subreddit={subreddit}\n              textSubmission={textSubmission}\n              linkSubmission={linkSubmission}\n            />\n          )}\n        </div>\n      </div>\n    </Paper>\n  );\n};\n\nexport default PostCard;\n"]},"metadata":{},"sourceType":"module"}